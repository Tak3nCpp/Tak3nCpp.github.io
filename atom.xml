<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Tak3n's Blog]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://tak3ncpp.github.io/"/>
  <updated>2015-11-07T07:06:04.415Z</updated>
  <id>http://tak3ncpp.github.io/</id>
  
  <author>
    <name><![CDATA[Tak3n]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[codeforces 255D]]></title>
    <link href="http://tak3ncpp.github.io/2015/11/07/cf%20255d/"/>
    <id>http://tak3ncpp.github.io/2015/11/07/cf 255d/</id>
    <published>2015-11-06T21:30:34.000Z</published>
    <updated>2015-11-07T07:06:04.415Z</updated>
    <content type="html"><![CDATA[<p><img src="/img/255D.png" alt=""><br>给出矩形尺寸和初始坐标以及需要的格子数，求时间。<a id="more"></a><br><a href="http://acm.hust.edu.cn/vjudge/problem/viewProblem.action?id=35311" target="_blank" rel="external">codeforces 255D</a></p>
<p>对于递增或递减的数据求中间状态，一般二分。<br>切分方法比较机智，如下。<br><img src="/img/255Dpic.png" alt=""><br>对于梯状体和矩形相交的考虑还是比较好想的。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> debug puts(<span class="string">"-----"</span>)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">10000</span>+<span class="number">6</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> NV <span class="number">10000</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> NE <span class="number">100000</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> LL unsigned long long</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> pi (acos(-<span class="number">1.0</span>))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> eps (<span class="number">1e-8</span>)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf (<span class="number">1</span>&lt;&lt;<span class="number">30</span>)-<span class="number">4000</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> INF (<span class="number">1l</span>l&lt;&lt;<span class="number">62</span>)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mp make_pair</span></span><br><span class="line">LL n,x,y,c;</span><br><span class="line"><span class="function">LL <span class="title">cnt</span><span class="params">(LL a,LL b,LL t)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(t&gt;a+b)<span class="keyword">return</span> a*b;</span><br><span class="line">	<span class="keyword">return</span> t*(t+<span class="number">1</span>)/<span class="number">2</span>-(t&gt;a?(t-a)*(t-a+<span class="number">1</span>)/<span class="number">2</span>:<span class="number">0</span>)-(t&gt;b?(t-b)*(t-b+<span class="number">1</span>)/<span class="number">2</span>:<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">f</span><span class="params">(LL t)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	LL ret=<span class="number">1L</span>L;</span><br><span class="line">	ret+=cnt(n-x,n-y+<span class="number">1</span>,t);</span><br><span class="line">	ret+=cnt(n-x+<span class="number">1</span>,y-<span class="number">1</span>,t);</span><br><span class="line">	ret+=cnt(x-<span class="number">1</span>,y,t);</span><br><span class="line">	ret+=cnt(x,n-y,t);</span><br><span class="line">	<span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%I64u%I64u%I64u%I64u"</span>,&amp;n,&amp;x,&amp;y,&amp;c);</span><br><span class="line">	LL l=<span class="number">0</span>,r=n*n,m=<span class="number">0</span>;</span><br><span class="line">	LL ans=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">if</span>(c==<span class="number">1</span>)<span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">"0"</span>),<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span>(l&lt;=r)</span><br><span class="line">	&#123;</span><br><span class="line">		m=(l+r)/<span class="number">2</span>;</span><br><span class="line">		<span class="keyword">if</span>(f(m)&lt;c)l=m+<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">else</span> ans=m,r=m-<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%I64u\n"</span>,ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="/img/255D.png" alt=""><br>给出矩形尺寸和初始坐标以及需要的格子数，求时间。]]>
    
    </summary>
    
      <category term="二分" scheme="http://tak3ncpp.github.io/tags/%E4%BA%8C%E5%88%86/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[codeforces 254E]]></title>
    <link href="http://tak3ncpp.github.io/2015/11/05/cf%20254e/"/>
    <id>http://tak3ncpp.github.io/2015/11/05/cf 254e/</id>
    <published>2015-11-05T02:30:35.000Z</published>
    <updated>2015-11-05T04:44:40.284Z</updated>
    <content type="html"><![CDATA[<p>一个同学生活n天，每天必吃v公斤食物。这n天他爸妈每天给他a[i]公斤食物，每天给的食物只能当天和第二天吃。他有m个同学，每个同学在他寝室从第li天住到ri天，食量为fi。他的RP值的增长规则为喂一个人一天的饭，涨1,当天不能重复喂。所有数据小于400，问他RP最多是多少，该怎么喂他的同学。<a id="more"></a>  </p>
<p>考虑每个状态涉及的变量和表示的数值，dp[i][j]表示第i天，昨天的剩饭为j，的RP值。<br>用已知量更新未知量。</p>
<p>那么代码及分析如下：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> pii pair&lt;int,int&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> piii pair&lt;int ,pii&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">403</span>;</span><br><span class="line"><span class="keyword">int</span> dp[N][N],pre[N][N],num[N][N];<span class="comment">///pre，昨天剩了多少饭，num,每天供应的食客数。</span></span><br><span class="line"><span class="keyword">int</span> n,v,m;</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="built_in">vector</span>&lt;pii&gt; em[N];<span class="comment">///每天的食客数。</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> rest)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(n&lt;=<span class="number">1</span>)<span class="keyword">return</span>;</span><br><span class="line">	print(n-<span class="number">1</span>,pre[n][rest]);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d"</span>,num[n][rest]);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num[n][rest];i++)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">" %d"</span>,em[n-<span class="number">1</span>][i].second);</span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	freopen(<span class="string">"input.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"output.txt"</span>, <span class="string">"w"</span>, <span class="built_in">stdout</span>);</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;v);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> l,r,eat;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;l,&amp;r,&amp;eat);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=l;j&lt;=r;j++)</span><br><span class="line">			em[j].push_back(pii(eat,i));</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		sort(em[i].begin(),em[i].end());<span class="comment">///每天先满足食量小的人的需求</span></span><br><span class="line">	<span class="built_in">memset</span>(dp,-<span class="number">1</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line">	dp[<span class="number">1</span>][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n+<span class="number">1</span>;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">			<span class="keyword">if</span>(dp[i][j]!=-<span class="number">1</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> fr=j,now=a[i];</span><br><span class="line">			<span class="keyword">if</span>(fr+now&lt;v)<span class="keyword">continue</span>;</span><br><span class="line">			<span class="keyword">if</span>(fr&gt;=v)<span class="comment">///如果昨天剩余量大于自己的食量，那么就吃掉</span></span><br><span class="line">				fr-=v;</span><br><span class="line">			<span class="keyword">else</span><span class="comment">///否则，吃掉今天的一部分来满足自己的食量</span></span><br><span class="line">				now-=v-fr,fr=<span class="number">0</span>;</span><br><span class="line">			<span class="keyword">if</span>(dp[i][j]&gt;dp[i+<span class="number">1</span>][now])<span class="comment">///更新明天的RP值和路径</span></span><br><span class="line">			&#123;</span><br><span class="line">				dp[i+<span class="number">1</span>][now]=dp[i][j];</span><br><span class="line">				pre[i+<span class="number">1</span>][now]=j;</span><br><span class="line">				num[i+<span class="number">1</span>][now]=<span class="number">0</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;em[i].size();k++)<span class="comment">///搜索每一天的食客的饭量</span></span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">int</span> t=em[i][k].first;</span><br><span class="line">				<span class="keyword">if</span>(fr+now&lt;t)<span class="keyword">break</span>;</span><br><span class="line">				<span class="keyword">if</span>(fr&gt;=t)</span><br><span class="line">					fr-=t;</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">				&#123;</span><br><span class="line">					now-=t-fr;</span><br><span class="line">					fr=<span class="number">0</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span>(dp[i][j]+k+<span class="number">1</span>&gt;dp[i+<span class="number">1</span>][now])</span><br><span class="line">				&#123;</span><br><span class="line">					dp[i+<span class="number">1</span>][now]=dp[i][j]+k+<span class="number">1</span>;</span><br><span class="line">					pre[i+<span class="number">1</span>][now]=j;</span><br><span class="line">					num[i+<span class="number">1</span>][now]=k+<span class="number">1</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">	<span class="keyword">int</span> ansj=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">		<span class="keyword">if</span>(dp[n+<span class="number">1</span>][i]&gt;dp[n+<span class="number">1</span>][ansj])</span><br><span class="line">			ansj=i;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dp[n+<span class="number">1</span>][ansj]);</span><br><span class="line">	print(n+<span class="number">1</span>,ansj);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>一个同学生活n天，每天必吃v公斤食物。这n天他爸妈每天给他a[i]公斤食物，每天给的食物只能当天和第二天吃。他有m个同学，每个同学在他寝室从第li天住到ri天，食量为fi。他的RP值的增长规则为喂一个人一天的饭，涨1,当天不能重复喂。所有数据小于400，问他RP最多是多少，该怎么喂他的同学。]]>
    
    </summary>
    
      <category term="DP" scheme="http://tak3ncpp.github.io/tags/DP/"/>
    
      <category term="贪心" scheme="http://tak3ncpp.github.io/tags/%E8%B4%AA%E5%BF%83/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[codeforces 254D]]></title>
    <link href="http://tak3ncpp.github.io/2015/11/05/cf%20254d/"/>
    <id>http://tak3ncpp.github.io/2015/11/05/cf 254d/</id>
    <published>2015-11-05T02:30:34.000Z</published>
    <updated>2015-11-05T04:42:48.384Z</updated>
    <content type="html"><![CDATA[<p>给出墙的位置和老鼠的位置，给你两个炸弹和炸弹爆炸秒数，炸弹不能炸或放在墙的位置，俩炸弹不能放在相同位置，炸弹每秒扩散方向为上下左右，要求炸死所有老鼠求炸弹放置位置。<br>地图范围是1000*1000。<a id="more"></a>  </p>
<p>枚举所有可以放置炸弹的地方，TLE。<br>这里我介绍一种剪枝的方法。设爆炸时间为d，我们先找第一个点，这个点一定是可以炸到第一个老鼠的，设这只老鼠为a。所以先枚举能炸到a的位置，然后用bfs爆炸第一个炸弹，并标记它炸到的位置和炸到的老鼠。然后再找第二个位置，这个位置一定是能炸到在第一个炸弹没炸到的老鼠b的，那么枚举能炸到b的位置，再用dfs爆炸第二个炸弹，如果炸死所有老鼠，就输出，否则就反悔这个位置，之前标记的地方全都进行反标记。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> pii pair&lt;int,int&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> piii pair&lt;int ,pii&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1003</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,d;</span><br><span class="line"><span class="keyword">int</span> rm[maxn][maxn]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> wm[maxn][maxn]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> fil[maxn][maxn]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">int</span> totr=<span class="number">0</span>,nowr;</span><br><span class="line"><span class="keyword">int</span> x1,y1,x2,y2;</span><br><span class="line"><span class="built_in">queue</span>&lt;pii&gt; rnum[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cango</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> x&gt;=<span class="number">0</span>&amp;&amp;x&lt;n&amp;&amp;y&gt;=<span class="number">0</span>&amp;&amp;y&lt;m&amp;&amp;wm[x][y]==<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> X[]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,-<span class="number">1</span>&#125;,Y[]=&#123;<span class="number">1</span>,-<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">booom</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> u)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="built_in">queue</span>&lt;piii &gt;q;</span><br><span class="line">	q.push(piii(<span class="number">0</span>,pii(x,y)));</span><br><span class="line">	<span class="keyword">while</span>(!q.empty())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> t=q.front().first;</span><br><span class="line">		x=q.front().second.first;</span><br><span class="line">		y=q.front().second.second;</span><br><span class="line">		q.pop();</span><br><span class="line">		<span class="keyword">if</span>(!fil[x][y])</span><br><span class="line">		&#123;</span><br><span class="line">			fil[x][y]=<span class="number">1</span>;</span><br><span class="line">			<span class="keyword">if</span>(rm[x][y])</span><br><span class="line">				nowr++;</span><br><span class="line">			rnum[u].push(pii(x,y));</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(t+<span class="number">1</span>&lt;=d)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> tx=x+X[i],ty=y+Y[i];</span><br><span class="line">			<span class="keyword">if</span>(cango(tx,ty))</span><br><span class="line">				q.push(piii(t+<span class="number">1</span>,pii(tx,ty)));</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">regret</span><span class="params">(<span class="keyword">int</span> u)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">while</span>(!rnum[u].empty())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> x=rnum[u].front().first,y=rnum[u].front().second;</span><br><span class="line">		rnum[u].pop();</span><br><span class="line">		fil[x][y]=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">if</span>(rm[x][y])nowr--;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">second_pos</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x=x1,y=y1;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++)</span><br><span class="line">			<span class="keyword">if</span>(rm[i][j]&amp;&amp;!fil[i][j])</span><br><span class="line">			&#123;</span><br><span class="line">				x=i,y=j;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=-d;i&lt;=d;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=-d;j+i&lt;=d;j++)</span><br><span class="line">		&#123;</span><br><span class="line">			x2=x+i,y2=y+j;</span><br><span class="line">			<span class="keyword">if</span>(cango(x2,y2)&amp;&amp;(x1!=x2||y1!=y2))</span><br><span class="line">			&#123;</span><br><span class="line">				booom(x2,y2,<span class="number">1</span>);</span><br><span class="line">				<span class="keyword">if</span>(nowr==totr)</span><br><span class="line">					<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">				regret(<span class="number">1</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">first_pos</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x,y;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++)</span><br><span class="line">			<span class="keyword">if</span>(rm[i][j])</span><br><span class="line">			&#123;</span><br><span class="line">				x=i,y=j;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=-d;i&lt;=d;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=-d;j+i&lt;=d;j++)</span><br><span class="line">		&#123;</span><br><span class="line">			x1=x+i,y1=y+j;</span><br><span class="line">			<span class="keyword">if</span>(cango(x1,y1))</span><br><span class="line">			&#123;</span><br><span class="line">				nowr=<span class="number">0</span>;</span><br><span class="line">				booom(x1,y1,<span class="number">0</span>);</span><br><span class="line">				<span class="keyword">if</span>(fil[x][y])</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">if</span>(second_pos())</span><br><span class="line">					<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				regret(<span class="number">0</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;		</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	freopen(<span class="string">"input.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"output.txt"</span>, <span class="string">"w"</span>, <span class="built_in">stdout</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;n,&amp;m,&amp;d);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++)</span><br><span class="line">			<span class="keyword">if</span>(s[j]==<span class="string">'R'</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				rm[i][j]=<span class="number">1</span>;</span><br><span class="line">				totr++;</span><br><span class="line">			&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(s[j]==<span class="string">'X'</span>)wm[i][j]=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(first_pos())<span class="built_in">printf</span>(<span class="string">"%d %d %d %d\n"</span>,x1+<span class="number">1</span>,y1+<span class="number">1</span>,x2+<span class="number">1</span>,y2+<span class="number">1</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>给出墙的位置和老鼠的位置，给你两个炸弹和炸弹爆炸秒数，炸弹不能炸或放在墙的位置，俩炸弹不能放在相同位置，炸弹每秒扩散方向为上下左右，要求炸死所有老鼠求炸弹放置位置。<br>地图范围是1000*1000。]]>
    
    </summary>
    
      <category term="剪枝" scheme="http://tak3ncpp.github.io/tags/%E5%89%AA%E6%9E%9D/"/>
    
      <category term="搜索" scheme="http://tak3ncpp.github.io/tags/%E6%90%9C%E7%B4%A2/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[codeforces 254C]]></title>
    <link href="http://tak3ncpp.github.io/2015/11/05/cf%20254c/"/>
    <id>http://tak3ncpp.github.io/2015/11/05/cf 254c/</id>
    <published>2015-11-05T02:30:33.000Z</published>
    <updated>2015-11-05T04:42:55.524Z</updated>
    <content type="html"><![CDATA[<p>给出两个串，我们需要修改最少量的字符，使第一个串和第二个串的相同字母数量相同。在此基础上，需要求出字典序最小的字符串。<a id="more"></a>  </p>
<p>贪心方式如下：<br>设需修改的串（第一个串）为s,被匹配的串（第二个串）为t.<br>在满足”修改最少量的字符“的前提下，使字典序最小，所以修改上去的串是固定的。<br>比如<br>CDBABC<br>ADCABD<br>那么修改上去的字母一定是A,D.而且修改上去的顺序一定是AD,不是DA.  </p>
<p>再来看s串，它一定有一个C和B被取代。<br>位置的取舍取决于字典序的变化和该字母的”松弛“程度。<br>在这个例子里，我们找到第一个C的位置，首先因为已经预处理了C的数量，所以我们知道这个C是可松弛的，即可以取代它，也可以不取代它。在这种情况下，我们比较当前可以填进去的字母的字典序和这个可修改字符的大小，如果可以使字典序变小，那么修改，即，例子中C被取代的情况，这个时候填进去的是A。否则，修改这个字符的松弛度，如果当前字符是可修改字符，并且不可松弛，强行替代它。即例子中一个B被取代的情况，在第二个B的位置填进去D。</p>
<p>答案即为<br>2<br>ADBADC</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;numeric&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">pragma</span> comment(linker, <span class="string">"/STACK:10240000000,10240000000"</span>)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> debug puts(<span class="string">"-----"</span>)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">50000</span>+<span class="number">4</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> uLL unsigned long long</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">char</span> s[<span class="number">100000</span>+<span class="number">5</span>];</span><br><span class="line"><span class="keyword">char</span> t[<span class="number">100000</span>+<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> sn[<span class="number">26</span>],tn[<span class="number">26</span>];</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">28</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	freopen(<span class="string">"input.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"output.txt"</span>, <span class="string">"w"</span>, <span class="built_in">stdout</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%s%s"</span>,s,t);</span><br><span class="line">	<span class="keyword">int</span> len=<span class="built_in">strlen</span>(s);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">		sn[s[i]-<span class="string">'A'</span>]++;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">		tn[t[i]-<span class="string">'A'</span>]++;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++)</span><br><span class="line">		ans[i]=tn[i]&gt;sn[i]?tn[i]-sn[i]:<span class="number">0</span>;</span><br><span class="line">	ans[<span class="number">26</span>]=-<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> k=s[i]-<span class="string">'A'</span>;</span><br><span class="line">		<span class="keyword">if</span>(sn[k]&lt;=tn[k])<span class="keyword">continue</span>;</span><br><span class="line">		<span class="keyword">if</span>(!tn[k])</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">			<span class="keyword">while</span>(ans[j]==<span class="number">0</span>)j++;</span><br><span class="line">			<span class="keyword">if</span>(j==<span class="number">26</span>)<span class="keyword">break</span>;</span><br><span class="line">			s[i]=j+<span class="string">'A'</span>;</span><br><span class="line">			cnt++;</span><br><span class="line">			ans[j]--;</span><br><span class="line">			sn[k]--;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">			<span class="keyword">while</span>(ans[j]==<span class="number">0</span>)j++;</span><br><span class="line">			<span class="keyword">if</span>(j==<span class="number">26</span>)<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">if</span>(j&gt;k)</span><br><span class="line">				tn[k]--;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">			&#123;</span><br><span class="line">				s[i]=j+<span class="string">'A'</span>;</span><br><span class="line">				ans[j]--;</span><br><span class="line">				cnt++;</span><br><span class="line">				sn[k]--;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,cnt);</span><br><span class="line">	<span class="built_in">puts</span>(s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>给出两个串，我们需要修改最少量的字符，使第一个串和第二个串的相同字母数量相同。在此基础上，需要求出字典序最小的字符串。]]>
    
    </summary>
    
      <category term="字符串" scheme="http://tak3ncpp.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="贪心" scheme="http://tak3ncpp.github.io/tags/%E8%B4%AA%E5%BF%83/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[codeforces 254B]]></title>
    <link href="http://tak3ncpp.github.io/2015/11/05/cf%20254b/"/>
    <id>http://tak3ncpp.github.io/2015/11/05/cf 254b/</id>
    <published>2015-11-05T02:30:32.000Z</published>
    <updated>2015-11-05T03:25:49.752Z</updated>
    <content type="html"><![CDATA[<p>给出n项任务，每项任务有需要的人数，需要花费时间，截至时间 这些属性，问至少需要多少人才能把这些活干完。<a id="more"></a>挺水的。</p>
<p>注意开始日期可能在头一年。这不是个闰年，并且时间下界不会到头一年的2月，先处理截止日期，再在整个工作时间内的每一天的需要总人数都加上这项工作需要的人数，最后找最大值。听上去用线段树维护最大值也可以是很有前途的做法。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;numeric&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">pragma</span> comment(linker, <span class="string">"/STACK:10240000000,10240000000"</span>)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> debug puts(<span class="string">"-----"</span>)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">50000</span>+<span class="number">4</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> uLL unsigned long long</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">int</span> day[<span class="number">700</span>];</span><br><span class="line"><span class="keyword">int</span> mo[]=&#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	freopen(<span class="string">"input.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"output.txt"</span>, <span class="string">"w"</span>, <span class="built_in">stdout</span>);</span><br><span class="line">	<span class="keyword">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">	<span class="keyword">int</span> m,d,p,t;</span><br><span class="line">	mem(day,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&amp;m,&amp;d,&amp;p,&amp;t);</span><br><span class="line">		<span class="keyword">int</span> date=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++)</span><br><span class="line">			date+=mo[j];</span><br><span class="line">		date+=d;</span><br><span class="line">		date+=<span class="number">150</span>;</span><br><span class="line">		<span class="keyword">int</span> st=date-t;</span><br><span class="line">		<span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(;st&lt;date;st++)</span><br><span class="line">			day[st]+=p;</span><br><span class="line">		<span class="comment">//printf("%d\n",cnt);</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">700</span>;i++)</span><br><span class="line">		ans=max(ans,day[i]);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>给出n项任务，每项任务有需要的人数，需要花费时间，截至时间 这些属性，问至少需要多少人才能把这些活干完。]]>
    
    </summary>
    
      <category term="水题" scheme="http://tak3ncpp.github.io/tags/%E6%B0%B4%E9%A2%98/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[codeforces 254A]]></title>
    <link href="http://tak3ncpp.github.io/2015/11/05/cf%20254a/"/>
    <id>http://tak3ncpp.github.io/2015/11/05/cf 254a/</id>
    <published>2015-11-05T02:30:31.000Z</published>
    <updated>2015-11-05T03:04:05.248Z</updated>
    <content type="html"><![CDATA[<p>给2n个数，问能不能组成n对数，使每对数中的两个数值相同。n小于300000，a[i]小于5000。<a id="more"></a>水题。</p>
<p>做法很多，可以排序，可以每输入一个数判断同样数值的数是否输入过，可以用链表储存每个数值出现过的位置。<br>给出我用链表过的程序。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;numeric&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">pragma</span> comment(linker, <span class="string">"/STACK:10240000000,10240000000"</span>)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> debug puts(<span class="string">"-----"</span>)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">50000</span>+<span class="number">4</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> uLL unsigned long long</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">int</span> next[<span class="number">600000</span>+<span class="number">6</span>];</span><br><span class="line"><span class="keyword">int</span> b[<span class="number">5000</span>+<span class="number">3</span>];</span><br><span class="line"><span class="keyword">int</span> pre[<span class="number">5000</span>+<span class="number">3</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	freopen(<span class="string">"input.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"output.txt"</span>, <span class="string">"w"</span>, <span class="built_in">stdout</span>);</span><br><span class="line">	<span class="keyword">int</span> n;</span><br><span class="line">	mem(b,<span class="number">0</span>);</span><br><span class="line">	mem(pre,-<span class="number">1</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>*n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> t;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">		b[t]++;</span><br><span class="line">		next[i]=pre[t];</span><br><span class="line">		pre[t]=i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">5000</span>;i++)</span><br><span class="line">			<span class="keyword">if</span>(b[i]%<span class="number">2</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">				<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">			&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">5000</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=pre[i],cnt=<span class="number">0</span>;~j;j=next[j],cnt++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%d"</span>,j+<span class="number">1</span>);</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%c"</span>,cnt%<span class="number">2</span>?<span class="string">'\n'</span>:<span class="string">' '</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>给2n个数，问能不能组成n对数，使每对数中的两个数值相同。n小于300000，a[i]小于5000。]]>
    
    </summary>
    
      <category term="水题" scheme="http://tak3ncpp.github.io/tags/%E6%B0%B4%E9%A2%98/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[uva 1121]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/07/uva%201121/"/>
    <id>http://tak3ncpp.github.io/2015/10/07/uva 1121/</id>
    <published>2015-10-07T07:30:34.000Z</published>
    <updated>2015-10-07T14:49:02.722Z</updated>
    <content type="html"><![CDATA[<p>给一个长度为n的序列，问其连续子序列和大于等于s的最短长度。<a id="more"></a></p>
<p>先预处理S[i],两个指针扫，一个指向当前下标，另一个指向使s[i]-s[j]大于等于s且i-j最短的位置。<br>注意样例是错的，注意长度为n也不能满足条件的情况，输出0。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">10000000</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> debug puts(<span class="string">"-----"</span>)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">4000</span>+<span class="number">6</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> NV <span class="number">1000</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> NE <span class="number">10000</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100000</span>+<span class="number">3</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n,s;</span><br><span class="line">	<span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;s))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> ans=inf;</span><br><span class="line">		a[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">			a[i]+=a[i-<span class="number">1</span>];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(a[i]-a[j]&lt;s)<span class="keyword">continue</span>;</span><br><span class="line">			<span class="keyword">while</span>(a[i]-a[j]&gt;=s)</span><br><span class="line">				j++;</span><br><span class="line">			j--;</span><br><span class="line">			ans=min(i-j,ans);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans==inf?<span class="number">0</span>:ans);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>给一个长度为n的序列，问其连续子序列和大于等于s的最短长度。]]>
    
    </summary>
    
      <category term="DP" scheme="http://tak3ncpp.github.io/tags/DP/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[uva 10881]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/07/uva%2010881/"/>
    <id>http://tak3ncpp.github.io/2015/10/07/uva 10881/</id>
    <published>2015-10-07T07:30:34.000Z</published>
    <updated>2015-10-07T14:48:28.567Z</updated>
    <content type="html"><![CDATA[<p>长度为L的线段上有n只蚂蚁，它们如果相遇就反转方向，如果走出线段外就fell off。给出每个蚂蚁的初始位置和朝向，问时间T后每个蚂蚁的位置和朝向。<a id="more"></a>  </p>
<p> 性质一：每两个蚂蚁相遇之后，相当于交换它们的标号，行动轨迹不变。<br> 性质二：蚂蚁和蚂蚁之间的相对位置始终不变。<br>所以先处理每个蚂蚁的位置，再判断最终位置是否在线段上就成。  </p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">10000000</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> debug puts(<span class="string">"-----"</span>)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">10000</span>+<span class="number">6</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> NV <span class="number">1000</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> NE <span class="number">10000</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">int</span> a[maxn],b[maxn];</span><br><span class="line"><span class="keyword">int</span> r[maxn],rk[maxn];</span><br><span class="line"><span class="comment">//有起始点相同的蚂蚁就GG</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a[x]&lt;a[y];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> t;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">	<span class="keyword">int</span> cas=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span>(t--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> l,T,n;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;l,&amp;T,&amp;n);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">char</span> w;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">"%d %c"</span>,&amp;a[i],&amp;w);</span><br><span class="line">			<span class="keyword">if</span>(w==<span class="string">'R'</span>)b[i]=<span class="number">1</span>;</span><br><span class="line">			<span class="keyword">else</span> b[i]=<span class="number">0</span>;</span><br><span class="line">			r[i]=i;</span><br><span class="line">		&#125;</span><br><span class="line">		sort(r,r+n,cmp);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">			rk[r[i]]=i;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(b[i])a[i]+=T;</span><br><span class="line">			<span class="keyword">else</span> a[i]-=T;</span><br><span class="line">			r[i]=i;</span><br><span class="line">		&#125;</span><br><span class="line">		sort(r,r+n,cmp);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">			<span class="keyword">if</span>(a[r[i]]==a[r[i-<span class="number">1</span>]])b[r[i]]=b[r[i-<span class="number">1</span>]]=<span class="number">2</span>;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"Case #%d:\n"</span>,++cas);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> e=r[rk[i]];</span><br><span class="line">			<span class="keyword">if</span>(a[e]&lt;<span class="number">0</span>||a[e]&gt;l)</span><br><span class="line">				<span class="built_in">puts</span>(<span class="string">"Fell off"</span>);</span><br><span class="line">			<span class="keyword">else</span> </span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">"%d "</span>,a[e]);</span><br><span class="line">					<span class="keyword">if</span>(b[e]==<span class="number">2</span>)</span><br><span class="line">					<span class="built_in">puts</span>(<span class="string">"Turning"</span>);</span><br><span class="line">					<span class="keyword">else</span> <span class="keyword">if</span>(b[e]==<span class="number">1</span>)<span class="built_in">puts</span>(<span class="string">"R"</span>);</span><br><span class="line">					<span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"L"</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>长度为L的线段上有n只蚂蚁，它们如果相遇就反转方向，如果走出线段外就fell off。给出每个蚂蚁的初始位置和朝向，问时间T后每个蚂蚁的位置和朝向。]]>
    
    </summary>
    
      <category term="机智题" scheme="http://tak3ncpp.github.io/tags/%E6%9C%BA%E6%99%BA%E9%A2%98/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[矩阵十题]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/02/matrix%E5%8D%81%E9%A2%98/"/>
    <id>http://tak3ncpp.github.io/2015/10/02/matrix十题/</id>
    <published>2015-10-02T00:30:34.000Z</published>
    <updated>2015-10-02T03:38:19.437Z</updated>
    <content type="html"><![CDATA[<p>闲来无事，整理链接，把矩阵10题重新做一遍，难得某oj恢复了。matrix67原来的文章由于博客更新还是其他的一些缘故，后面一些内容挂了，不如看<a href="http://www.cnblogs.com/frog112111/tag/%E7%9F%A9%E9%98%B5%E7%BB%8F%E5%85%B8%E7%AE%97%E6%B3%95/" target="_blank" rel="external">这个链接</a>。<a id="more"></a><br>感觉做这些题的过程就是优化模板的过程。</p>
<ul>
<li><a href="http://tak3ncpp.github.io/2015/10/02/matrix1/">经典题目1</a></li>
<li><a href="http://tak3ncpp.github.io/2015/10/02/matrix2/">经典题目2</a></li>
<li><a href="http://tak3ncpp.github.io/2015/10/02/matrix3/">经典题目3</a></li>
<li><a href="http://tak3ncpp.github.io/2015/10/02/matrix4/">经典题目4</a></li>
<li><a href="http://tak3ncpp.github.io/2015/10/02/matrix5/">经典题目5</a></li>
<li><a href="http://tak3ncpp.github.io/2015/10/02/matrix6/">经典题目6</a></li>
<li><a href="http://tak3ncpp.github.io/2015/10/02/matrix7/">经典题目7</a></li>
<li><a href="http://tak3ncpp.github.io/2015/10/02/matrix8/">经典题目8</a></li>
<li><a href="http://tak3ncpp.github.io/2015/10/02/matrix9/">经典题目9</a></li>
<li><a href="http://tak3ncpp.github.io/2015/10/02/matrix10/">经典题目10</a></li>
</ul>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>闲来无事，整理链接，把矩阵10题重新做一遍，难得某oj恢复了。matrix67原来的文章由于博客更新还是其他的一些缘故，后面一些内容挂了，不如看<a href="http://www.cnblogs.com/frog112111/tag/%E7%9F%A9%E9%98%B5%E7%BB%8F%E5%85%B8%E7%AE%97%E6%B3%95/">这个链接</a>。]]>
    
    </summary>
    
      <category term="matrix" scheme="http://tak3ncpp.github.io/tags/matrix/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[poj 2778]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/02/matrix10/"/>
    <id>http://tak3ncpp.github.io/2015/10/02/matrix10/</id>
    <published>2015-10-01T23:49:34.000Z</published>
    <updated>2015-10-02T04:16:07.445Z</updated>
    <content type="html"><![CDATA[<p><a href="http://poj.org/problem?id=2778" target="_blank" rel="external">http://poj.org/problem?id=2778</a><br>    题目大意是，检测所有可能的n位DNA串有多少个DNA串中不含有指定的病毒片段。合法的DNA只能由ACTG四个字符构成。题目将给出10个以内的病毒片段，每个片段长度不超过10。数据规模n&lt;=2 000 000 000。<a id="more"></a></p>
<p>这道题真的让我很痛苦，debug3天未果。<br>AC自动机加矩阵乘法。<br>核心思想是，一个长度为n的字符串的匹配相当于在一个构造好的字典树上从root开始走n步。所以所有的走法也都是在这个字典树上进行的。关键就在于不能走到ed[i]的节点的判断，与ed[i]等价的节点也属于不能走到的节点，所以如果当前节点的fail节点ed为1时，当前节点ed也为1.</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> debug puts(<span class="string">"-----"</span>)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">100</span>+<span class="number">5</span></span></span><br><span class="line"><span class="keyword">int</span> siz;</span><br><span class="line"><span class="keyword">int</span> mod=<span class="number">100000</span>;</span><br><span class="line"><span class="keyword">struct</span> matrix </span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">long</span> <span class="keyword">long</span> a[maxn][maxn];</span><br><span class="line">	matrix <span class="keyword">operator</span>*(<span class="keyword">const</span> matrix &amp;t)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		mem(res.a,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;siz;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;siz;j++)</span><br><span class="line">				<span class="keyword">if</span>(a[i][j])</span><br><span class="line">					<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;siz;k++)</span><br><span class="line">						res.a[i][k]=(res.a[i][k]+a[i][j]*t.a[j][k])%mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">	matrix <span class="keyword">operator</span>*=(<span class="keyword">const</span> matrix &amp;t)</span><br><span class="line">	&#123;</span><br><span class="line">		*<span class="keyword">this</span>=t* *<span class="keyword">this</span>;</span><br><span class="line">		<span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;a;</span><br><span class="line"><span class="keyword">struct</span> trie</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> next[maxn][<span class="number">4</span>],fail[maxn],ed[maxn];</span><br><span class="line">	<span class="built_in">map</span>&lt;<span class="keyword">char</span>,<span class="keyword">int</span>&gt;mp;</span><br><span class="line">	<span class="keyword">int</span> root,L;</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">newnode</span><span class="params">()</span></span><br><span class="line">	</span>&#123;</span><br><span class="line">		mem(next[L],-<span class="number">1</span>);</span><br><span class="line">		ed[L]=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">return</span> L++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span><br><span class="line">	</span>&#123;</span><br><span class="line">		L=<span class="number">0</span>;</span><br><span class="line">		root=newnode();</span><br><span class="line">		mem(a.a,<span class="number">0</span>);</span><br><span class="line">		mp[<span class="string">'A'</span>]=<span class="number">0</span>,mp[<span class="string">'C'</span>]=<span class="number">1</span>,mp[<span class="string">'G'</span>]=<span class="number">2</span>,mp[<span class="string">'T'</span>]=<span class="number">3</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">char</span> s[])</span></span><br><span class="line">	</span>&#123;</span><br><span class="line">		<span class="keyword">int</span> len=<span class="built_in">strlen</span>(s);</span><br><span class="line">		<span class="keyword">int</span> now=root;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> &amp;t=next[now][mp[s[i]]];</span><br><span class="line">			<span class="keyword">if</span>(t==-<span class="number">1</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				t=newnode();</span><br><span class="line">			&#125;</span><br><span class="line">			now=t;</span><br><span class="line">		&#125;</span><br><span class="line">		ed[now]=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span></span><br><span class="line">	</span>&#123;</span><br><span class="line">		<span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">			<span class="keyword">if</span>(next[root][i]==-<span class="number">1</span>)</span><br><span class="line">				next[root][i]=root;</span><br><span class="line">			<span class="keyword">else</span> </span><br><span class="line">			&#123;</span><br><span class="line">				fail[next[root][i]]=root;</span><br><span class="line">				q.push(next[root][i]);</span><br><span class="line">			&#125;</span><br><span class="line">		<span class="keyword">while</span>(!q.empty())</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> now=q.front();</span><br><span class="line">			q.pop();</span><br><span class="line">			<span class="keyword">if</span>(ed[fail[now]])</span><br><span class="line">				ed[now]=<span class="number">1</span>;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">				<span class="keyword">if</span>(next[now][i]==-<span class="number">1</span>)</span><br><span class="line">					next[now][i]=next[fail[now]][i];</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">				&#123;</span><br><span class="line">					fail[next[now][i]]=next[fail[now]][i];</span><br><span class="line">					q.push(next[now][i]);</span><br><span class="line">				&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;L;i++)</span><br><span class="line">		&#123;</span><br><span class="line">				<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)</span><br><span class="line">					<span class="keyword">if</span>(ed[next[i][j]]==<span class="number">0</span>)</span><br><span class="line">							a.a[i][next[i][j]]++;</span><br><span class="line">		&#125;</span><br><span class="line">		siz=L;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line">trie ac;</span><br><span class="line"><span class="function">matrix <span class="title">qmod</span><span class="params">(<span class="keyword">int</span> k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	matrix res;</span><br><span class="line">	mem(res.a,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;siz;i++)</span><br><span class="line">		res.a[i][i]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(k)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(k&amp;<span class="number">1</span>)</span><br><span class="line">			res*=a;</span><br><span class="line">		a*=a;</span><br><span class="line">		k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(matrix t)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;siz;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;siz;j++)</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%d "</span>,t.a[i][j]);</span><br><span class="line">		<span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">20</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> m,n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;m,&amp;n);</span><br><span class="line">	matrix t;</span><br><span class="line">	ac.init();</span><br><span class="line">	<span class="keyword">while</span>(m--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">		ac.insert(s);</span><br><span class="line">	&#125;</span><br><span class="line">	ac.build();</span><br><span class="line">	t=qmod(n);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;siz;i++)</span><br><span class="line">	&#123;</span><br><span class="line">			ans+=t.a[<span class="number">0</span>][i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans%mod);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://poj.org/problem?id=2778">http://poj.org/problem?id=2778</a><br>    题目大意是，检测所有可能的n位DNA串有多少个DNA串中不含有指定的病毒片段。合法的DNA只能由ACTG四个字符构成。题目将给出10个以内的病毒片段，每个片段长度不超过10。数据规模n&lt;=2 000 000 000。]]>
    
    </summary>
    
      <category term="AC自动机" scheme="http://tak3ncpp.github.io/tags/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/"/>
    
      <category term="matrix" scheme="http://tak3ncpp.github.io/tags/matrix/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[poj 3420]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/02/matrix9.1/"/>
    <id>http://tak3ncpp.github.io/2015/10/02/matrix9.1/</id>
    <published>2015-10-01T23:39:39.000Z</published>
    <updated>2015-10-02T04:18:04.411Z</updated>
    <content type="html"><![CDATA[<p><a href="http://poj.org/problem?id=3420" target="_blank" rel="external">http://poj.org/problem?id=3420</a><br>poj 2663升级版，注意不用的边可以删除以缩小矩阵规模，可以有自环。<a id="more"></a>  </p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> siz <span class="number">6</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> Mytype int</span></span><br><span class="line"><span class="keyword">int</span> N=<span class="number">6</span>;</span><br><span class="line">Mytype mod;</span><br><span class="line"><span class="keyword">struct</span> matrix </span><br><span class="line">&#123;</span><br><span class="line">	Mytype a[siz][siz];</span><br><span class="line">	matrix <span class="keyword">operator</span>*(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		mem(res.a,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				<span class="keyword">if</span>(a[i][j])</span><br><span class="line">					<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;N;k++)</span><br><span class="line">						res.a[i][k]+=a[i][j]*y.a[j][k],res.a[i][k]%=mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">	matrix <span class="keyword">operator</span>+(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				res.a[i][j]=a[i][j]+y.a[i][j],res.a[i][j]%=mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">	matrix <span class="keyword">operator</span>*=(<span class="keyword">const</span> matrix &amp;y)</span><br><span class="line">	&#123;</span><br><span class="line">		*<span class="keyword">this</span>=y* *<span class="keyword">this</span>;</span><br><span class="line">		<span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">matrix <span class="title">qmod</span><span class="params">(matrix a,<span class="keyword">int</span> k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	matrix res;</span><br><span class="line">	mem(res.a,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">		res.a[i][i]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(k)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(k&amp;<span class="number">1</span>)</span><br><span class="line">			res*=a;</span><br><span class="line">		a*=a;</span><br><span class="line">		k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">35</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    matrix a;</span><br><span class="line">    mem(a.a,<span class="number">0</span>);</span><br><span class="line">    a.a[<span class="number">4</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">5</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">3</span>][<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">5</span>][<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">2</span>][<span class="number">3</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">1</span>][<span class="number">4</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">5</span>][<span class="number">4</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">0</span>][<span class="number">5</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">1</span>][<span class="number">5</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">2</span>][<span class="number">5</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">4</span>][<span class="number">5</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">5</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">5</span>][<span class="number">5</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;k,&amp;mod),k)</span><br><span class="line">    &#123;</span><br><span class="line">        matrix ans=qmod(a,k+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> res=ans.a[<span class="number">5</span>][<span class="number">0</span>];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,res);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://poj.org/problem?id=3420">http://poj.org/problem?id=3420</a><br>poj 2663升级版，注意不用的边可以删除以缩小矩阵规模，可以有自环。]]>
    
    </summary>
    
      <category term="matrix" scheme="http://tak3ncpp.github.io/tags/matrix/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[poj 2663]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/02/matrix9/"/>
    <id>http://tak3ncpp.github.io/2015/10/02/matrix9/</id>
    <published>2015-10-01T23:39:34.000Z</published>
    <updated>2015-10-02T04:17:51.281Z</updated>
    <content type="html"><![CDATA[<p> <a href="http://poj.org/problem?id=2663" target="_blank" rel="external">http://poj.org/problem?id=2663</a><br>用1 x 2的多米诺骨牌填满M x N的矩形有多少种方案，M&lt;=5，N<2^31，输出答案mod p的结果.<a="" id="more"><br>我们以M=3为例进行讲解。假设我们把这个矩形横着放在电脑屏幕上，从右往左一列一列地进行填充。其中前n-2列已经填满了，第n-1列参差不齐。现在我 们要做的事情是把第n-1列也填满，将状态转移到第n列上去。由于第n-1列的状态不一样（有8种不同的状态），因此我们需要分情况进行讨论。在图中，我 把转移前8种不同的状态放在左边，转移后8种不同的状态放在右边，左边的某种状态可以转移到右边的某种状态就在它们之间连一根线。注意为了保证方案不重 复，状态转移时我们不允许在第n-1列竖着放一个多米诺骨牌（例如左边第2种状态不能转移到右边第4种状态），否则这将与另一种转移前的状态重复。把这8 种状态的转移关系画成一个有向图，那么问题就变成了这样：从状态111出发，恰好经过n步回到这个状态有多少种方案。比如，n=2时有3种方 案，111-&gt;011-&gt;111、111-&gt;110-&gt;111和111-&gt;000-&gt;111，这与用多米诺骨牌覆盖 3x2矩形的方案一一对应。这样这个题目就转化为了我们前面的例题8.<br><img src="/img/MATRIX-solve.png" alt="">  </2^31，输出答案mod></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> siz <span class="number">6</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> Mytype int</span></span><br><span class="line"><span class="keyword">int</span> N=<span class="number">6</span>;</span><br><span class="line">Mytype mod = <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">struct</span> matrix </span><br><span class="line">&#123;</span><br><span class="line">	Mytype a[siz][siz];</span><br><span class="line">	matrix <span class="keyword">operator</span>*(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		mem(res.a,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				<span class="keyword">if</span>(a[i][j])</span><br><span class="line">					<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;N;k++)</span><br><span class="line">						res.a[i][k]+=a[i][j]*y.a[j][k];</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">	matrix <span class="keyword">operator</span>+(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				res.a[i][j]=a[i][j]+y.a[i][j],res.a[i][j]%=mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">	matrix <span class="keyword">operator</span>*=(<span class="keyword">const</span> matrix &amp;y)</span><br><span class="line">	&#123;</span><br><span class="line">		*<span class="keyword">this</span>=y* *<span class="keyword">this</span>;</span><br><span class="line">		<span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">matrix <span class="title">qmod</span><span class="params">(matrix a,<span class="keyword">int</span> k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	matrix res;</span><br><span class="line">	mem(res.a,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">		res.a[i][i]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(k)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(k&amp;<span class="number">1</span>)</span><br><span class="line">			res*=a;</span><br><span class="line">		a*=a;</span><br><span class="line">		k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">35</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    matrix a;</span><br><span class="line">    mem(a.a,<span class="number">0</span>);</span><br><span class="line">    a.a[<span class="number">4</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">3</span>][<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">5</span>][<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">2</span>][<span class="number">3</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">1</span>][<span class="number">4</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">5</span>][<span class="number">4</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">0</span>][<span class="number">5</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">2</span>][<span class="number">5</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">4</span>][<span class="number">5</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">5</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    matrix res=a;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">30</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ans[i]=res.a[<span class="number">0</span>][<span class="number">5</span>];</span><br><span class="line">        res*=a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n),~n)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans[n]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><a href="http://tak3ncpp.github.io/2015/10/02/matrix9.1/">相关练习</a></li>
</ul>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p> <a href="http://poj.org/problem?id=2663">http://poj.org/problem?id=2663</a><br>用1 x 2的多米诺骨牌填满M x N的矩形有多少种方案，M&lt;=5，N<2^31，输出答案mod p的结果.]]>
    
    </summary>
    
      <category term="matrix" scheme="http://tak3ncpp.github.io/tags/matrix/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[poj 3613]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/02/matrix8.1/"/>
    <id>http://tak3ncpp.github.io/2015/10/02/matrix8.1/</id>
    <published>2015-10-01T23:38:39.000Z</published>
    <updated>2015-10-02T04:26:02.369Z</updated>
    <content type="html"><![CDATA[<p><a href="http://poj.org/problem?id=3613" target="_blank" rel="external">http://poj.org/problem?id=3613</a><br>题目大意:   给出一张无向连通图，求S到E经过k条边的最短路。<a id="more"></a><br>把矩阵乘法换成Floyd，注意各种初始化以及点的数量。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> siz <span class="number">102</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> Mytype long long</span></span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line">Mytype mod = <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">struct</span> matrix </span><br><span class="line">&#123;</span><br><span class="line">	Mytype a[siz][siz];</span><br><span class="line">	matrix <span class="keyword">operator</span>*(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">			res.a[i][j]=inf;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;N;k++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">				<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">					res.a[i][j]=min(res.a[i][j],a[i][k]+y.a[k][j]);</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">matrix <span class="title">qmod</span><span class="params">(matrix a,<span class="keyword">int</span> k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	matrix res=a;</span><br><span class="line">	k--;</span><br><span class="line">	<span class="keyword">while</span>(k)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(k&amp;<span class="number">1</span>)</span><br><span class="line">			res=res*a;</span><br><span class="line">		a=a*a;</span><br><span class="line">		k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(matrix k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%d "</span>,k.a[i][j]);</span><br><span class="line">		<span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">	&#125;	</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; mp;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n,t,s,e;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&amp;n,&amp;t,&amp;s,&amp;e);</span><br><span class="line">	matrix a;</span><br><span class="line">	N=t+<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">		a.a[i][j]=inf;</span><br><span class="line">	<span class="keyword">int</span> ecnt=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(t--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> l,u,v;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;l,&amp;u,&amp;v);</span><br><span class="line">		<span class="keyword">if</span>(!mp[u])mp[u]=ecnt++;</span><br><span class="line">		<span class="keyword">if</span>(!mp[v])mp[v]=ecnt++;</span><br><span class="line">		u=mp[u]-<span class="number">1</span>,v=mp[v]-<span class="number">1</span>;</span><br><span class="line">		a.a[u][v]=a.a[v][u]=l;</span><br><span class="line">	&#125;</span><br><span class="line">	N=ecnt-<span class="number">1</span>;</span><br><span class="line">	a=qmod(a,n);</span><br><span class="line">	s=mp[s]-<span class="number">1</span>,e=mp[e]-<span class="number">1</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a.a[s][e]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://poj.org/problem?id=3613">http://poj.org/problem?id=3613</a><br>题目大意:   给出一张无向连通图，求S到E经过k条边的最短路。]]>
    
    </summary>
    
      <category term="Floyd" scheme="http://tak3ncpp.github.io/tags/Floyd/"/>
    
      <category term="matrix" scheme="http://tak3ncpp.github.io/tags/matrix/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[hdu 2157]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/02/matrix8/"/>
    <id>http://tak3ncpp.github.io/2015/10/02/matrix8/</id>
    <published>2015-10-01T23:38:36.000Z</published>
    <updated>2015-10-02T04:25:29.389Z</updated>
    <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2157" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=2157</a><br> 给定一个有向图，问从A点恰好走k步（允许重复经过边）到达B点的方案数mod p的值<a id="more"></a><br>    把给定的图转为邻接矩阵，即A(i,j)=1当且仅当存在一条边i-&gt;j。令C=A<em>A，那么C(i,j)=ΣA(i,k)</em>A(k,j)，实际上就等于从点i到点j恰好经过2条边的路径数（枚举k为中转点）。类似地，C*A的第i行第j列就表示从i到j经过3条边的路径数。同理，如果要求经过k步的路径数，我们只需要二分求出A^k即可。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> siz <span class="number">20</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> Mytype long long</span></span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line">Mytype mod = <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">struct</span> matrix </span><br><span class="line">&#123;</span><br><span class="line">	Mytype a[siz][siz];</span><br><span class="line">	matrix <span class="keyword">operator</span>*(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		mem(res.a,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				<span class="keyword">if</span>(a[i][j])</span><br><span class="line">					<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;N;k++)</span><br><span class="line">						res.a[i][k]+=a[i][j]*y.a[j][k],res.a[i][k]%=mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">	matrix <span class="keyword">operator</span>+(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				res.a[i][j]=a[i][j]+y.a[i][j],res.a[i][j]%=mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">	matrix <span class="keyword">operator</span>*=(<span class="keyword">const</span> matrix &amp;y)</span><br><span class="line">	&#123;</span><br><span class="line">		*<span class="keyword">this</span>=y* *<span class="keyword">this</span>;</span><br><span class="line">		<span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">matrix <span class="title">qmod</span><span class="params">(matrix a,<span class="keyword">int</span> k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	matrix res;</span><br><span class="line">	mem(res.a,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">		res.a[i][i]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(k)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(k&amp;<span class="number">1</span>)</span><br><span class="line">			res*=a;</span><br><span class="line">		a*=a;</span><br><span class="line">		k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> m;</span><br><span class="line">	<span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;N,&amp;m),N+m)</span><br><span class="line">	&#123;</span><br><span class="line">		matrix a;</span><br><span class="line">		mem(a.a,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">while</span>(m--)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> u,v;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</span><br><span class="line">			a.a[u][v]=<span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">int</span> t;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">		<span class="keyword">while</span>(t--)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> x,y,k;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;x,&amp;y,&amp;k);</span><br><span class="line">			matrix t=qmod(a,k);</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,t.a[x][y]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><a href="http://tak3ncpp.github.io/2015/10/02/matrix8.1/">相关练习</a></li>
</ul>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2157">http://acm.hdu.edu.cn/showproblem.php?pid=2157</a><br> 给定一个有向图，问从A点恰好走k步（允许重复经过边）到达B点的方案数mod p的值]]>
    
    </summary>
    
      <category term="matrix" scheme="http://tak3ncpp.github.io/tags/matrix/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[hdu 1757]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/02/matrix7.1/"/>
    <id>http://tak3ncpp.github.io/2015/10/02/matrix7.1/</id>
    <published>2015-10-01T23:37:39.000Z</published>
    <updated>2015-10-02T04:17:30.549Z</updated>
    <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1757" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=1757</a><br>If x &lt; 10   ，则  f(x) = x.<br>If x &gt;= 10 ，则  f(x) = a0 <em> f(x-1) + a1 </em> f(x-2) + a2 <em> f(x-3) + …… + a9 </em> f(x-10);<br>给出k，m和a0~a9，求f(k)%m，  k<2*10^9 ,="" m="" <="" 10^5<a="" id="more">  </2*10^9></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> siz <span class="number">10</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> Mytype long long</span></span><br><span class="line"><span class="keyword">int</span> N=<span class="number">10</span>;</span><br><span class="line">Mytype mod;</span><br><span class="line"><span class="keyword">struct</span> matrix </span><br><span class="line">&#123;</span><br><span class="line">	Mytype a[siz][siz];</span><br><span class="line">	matrix <span class="keyword">operator</span>*(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		mem(res.a,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				<span class="keyword">if</span>(a[i][j])</span><br><span class="line">					<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;N;k++)</span><br><span class="line">						res.a[i][k]+=a[i][j]*y.a[j][k],res.a[i][k]%=mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">	matrix <span class="keyword">operator</span>+(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				res.a[i][j]=a[i][j]+y.a[i][j],res.a[i][j]%=mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">	matrix <span class="keyword">operator</span>*=(<span class="keyword">const</span> matrix &amp;y)</span><br><span class="line">	&#123;</span><br><span class="line">		*<span class="keyword">this</span>=y* *<span class="keyword">this</span>;</span><br><span class="line">		<span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">matrix <span class="title">qmod</span><span class="params">(matrix a,<span class="keyword">int</span> k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	matrix res;</span><br><span class="line">	mem(res.a,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">		res.a[i][i]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(k)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(k&amp;<span class="number">1</span>)</span><br><span class="line">			res*=a;</span><br><span class="line">		a*=a;</span><br><span class="line">		k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> k;</span><br><span class="line">	<span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;k,&amp;mod))</span><br><span class="line">	&#123;	</span><br><span class="line">		matrix t;</span><br><span class="line">		mem(t.a,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">"%I64d"</span>,&amp;t.a[<span class="number">0</span>][i]);</span><br><span class="line">		<span class="keyword">if</span>(k&lt;<span class="number">10</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,k);</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">9</span>;i++)</span><br><span class="line">			t.a[i+<span class="number">1</span>][i]=<span class="number">1</span>;</span><br><span class="line">		t=qmod(t,k-<span class="number">9</span>);</span><br><span class="line">		<span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">			ans+=t.a[<span class="number">0</span>][i]*(<span class="number">9</span>-i),ans%=mod;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%I64d\n"</span>,ans);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1757">http://acm.hdu.edu.cn/showproblem.php?pid=1757</a><br>If x &lt; 10   ，则  f(x) = x.<br>If x &gt;= 10 ，则  f(x) = a0 <em> f(x-1) + a1 </em> f(x-2) + a2 <em> f(x-3) + …… + a9 </em> f(x-10);<br>给出k，m和a0~a9，求f(k)%m，  k<2*10^9 , m < 10^5]]>
    
    </summary>
    
      <category term="matrix" scheme="http://tak3ncpp.github.io/tags/matrix/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[voj 1067]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/02/matrix7/"/>
    <id>http://tak3ncpp.github.io/2015/10/02/matrix7/</id>
    <published>2015-10-01T23:37:34.000Z</published>
    <updated>2015-10-02T03:58:48.920Z</updated>
    <content type="html"><![CDATA[<p><a href="https://vijos.org/p/1067" target="_blank" rel="external">https://vijos.org/p/1067</a><br>题目大意：有n个监狱排成一列，每次最多可以往前走k个监狱，问走到第n个监狱有多少种方案，结果mod 7777777<br>1&lt;=k&lt;=10, 1&lt;=n&lt;=2^31-1 <a id="more"></a>  </p>
<p>看起来像是一道水DP，由于满足一定的递推关系，矩阵的效率是高于DP的，我曾做过这个比较。<br>先DP前k项，再矩阵快速幂求A的n-k次方。 </p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> siz <span class="number">10</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> Mytype long long</span></span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line">Mytype mod = <span class="number">7777777</span>;</span><br><span class="line"><span class="keyword">struct</span> matrix </span><br><span class="line">&#123;</span><br><span class="line">	Mytype a[siz][siz];</span><br><span class="line">	matrix <span class="keyword">operator</span>*(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		mem(res.a,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				<span class="keyword">if</span>(a[i][j])</span><br><span class="line">					<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;N;k++)</span><br><span class="line">						res.a[i][k]+=a[i][j]*y.a[j][k],res.a[i][k]%=mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">	matrix <span class="keyword">operator</span>+(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				res.a[i][j]=a[i][j]+y.a[i][j],res.a[i][j]%=mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">matrix <span class="title">qmod</span><span class="params">(matrix a,<span class="keyword">int</span> k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	matrix res;</span><br><span class="line">	mem(res.a,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">		res.a[i][i]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(k)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(k&amp;<span class="number">1</span>)</span><br><span class="line">			res=a*res;</span><br><span class="line">		a=a*a;</span><br><span class="line">		k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;N,&amp;n);</span><br><span class="line">	<span class="keyword">int</span> dp[N+<span class="number">1</span>],sum[N+<span class="number">1</span>];</span><br><span class="line">	dp[<span class="number">1</span>]=sum[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=N;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		dp[i]=sum[i-<span class="number">1</span>]+<span class="number">1</span>;</span><br><span class="line">		sum[i]=sum[i-<span class="number">1</span>]+dp[i];</span><br><span class="line">	&#125;</span><br><span class="line">	matrix a;</span><br><span class="line">	mem(a.a,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">		a.a[<span class="number">0</span>][i]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N-<span class="number">1</span>;i++)</span><br><span class="line">		a.a[i+<span class="number">1</span>][i]=<span class="number">1</span>;</span><br><span class="line">	a=qmod(a,n-N);</span><br><span class="line">	<span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">		ans+=a.a[<span class="number">0</span>][i]*dp[N-i],ans%=mod;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><a href="http://tak3ncpp.github.io/2015/10/02/matrix7.1/">相关练习</a></li>
</ul>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="https://vijos.org/p/1067">https://vijos.org/p/1067</a><br>题目大意：有n个监狱排成一列，每次最多可以往前走k个监狱，问走到第n个监狱有多少种方案，结果mod 7777777<br>1&lt;=k&lt;=10, 1&lt;=n&lt;=2^31-1]]>
    
    </summary>
    
      <category term="DP" scheme="http://tak3ncpp.github.io/tags/DP/"/>
    
      <category term="matrix" scheme="http://tak3ncpp.github.io/tags/matrix/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[poj 3070]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/02/matrix6/"/>
    <id>http://tak3ncpp.github.io/2015/10/02/matrix6/</id>
    <published>2015-10-01T23:36:35.000Z</published>
    <updated>2015-10-02T04:26:41.051Z</updated>
    <content type="html"><![CDATA[<p>给定n和p，求第n个Fibonacci数mod p的值，n不超过2^31.<a id="more"></a><br>根据前面的一些思路，现在我们需要构造一个2 x 2的矩阵，使得它乘以(a,b)得到的结果是(b,a+b)。每多乘一次这个矩阵，这两个数就会多迭代一次。那么，我们把这个2 x 2的矩阵自乘n次，再乘以(0,1)就可以得到第n个Fibonacci数了。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> siz <span class="number">100</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> Mytype int</span></span><br><span class="line"><span class="keyword">int</span> N=<span class="number">2</span>;</span><br><span class="line">Mytype mod = <span class="number">10000</span>;</span><br><span class="line"><span class="keyword">struct</span> matrix </span><br><span class="line">&#123;</span><br><span class="line">	Mytype a[siz][siz];</span><br><span class="line">	matrix <span class="keyword">operator</span>*(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		mem(res.a,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				<span class="keyword">if</span>(a[i][j])</span><br><span class="line">					<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;N;k++)</span><br><span class="line">						res.a[i][k]+=a[i][j]*y.a[j][k],res.a[i][k]%=mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">	matrix <span class="keyword">operator</span>+(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				res.a[i][j]=a[i][j]+y.a[i][j],res.a[i][j]%=mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">matrix <span class="title">qmod</span><span class="params">(matrix a,<span class="keyword">int</span> k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	matrix res;</span><br><span class="line">	mem(res.a,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">		res.a[i][i]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(k)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(k&amp;<span class="number">1</span>)</span><br><span class="line">			res=a*res;</span><br><span class="line">		a=a*a;</span><br><span class="line">		k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> t;</span><br><span class="line">	<span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t),~t)</span><br><span class="line">	&#123;</span><br><span class="line">		matrix a;</span><br><span class="line">		a.a[<span class="number">0</span>][<span class="number">0</span>]=a.a[<span class="number">0</span>][<span class="number">1</span>]=a.a[<span class="number">1</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">		a.a[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">		a=qmod(a,t);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a.a[<span class="number">1</span>][<span class="number">0</span>]);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>给定n和p，求第n个Fibonacci数mod p的值，n不超过2^31.]]>
    
    </summary>
    
      <category term="matrix" scheme="http://tak3ncpp.github.io/tags/matrix/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[《算法艺术与信息学竞赛》207页]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/02/matrix5/"/>
    <id>http://tak3ncpp.github.io/2015/10/02/matrix5/</id>
    <published>2015-10-01T23:35:35.000Z</published>
    <updated>2015-10-02T03:51:41.681Z</updated>
    <content type="html"><![CDATA[<p>   大家自己去看看吧，书上讲得很详细。解题方法和上一题类似，都是用矩阵来表示操作，然后二分求最终状态。</p>
<p>我去看了这道题，确实和前面的题有雷同，比较值得注意的是，srbga始终围绕图的形式来讲矩阵，这一点我觉得很有价值。<a id="more"></a>   </p>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>   大家自己去看看吧，书上讲得很详细。解题方法和上一题类似，都是用矩阵来表示操作，然后二分求最终状态。</p>
<p>我去看了这道题，确实和前面的题有雷同，比较值得注意的是，srbga始终围绕图的形式来讲矩阵，这一点我觉得很有价值。]]>
    
    </summary>
    
      <category term="matrix" scheme="http://tak3ncpp.github.io/tags/matrix/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[voj 1049]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/02/matrix4/"/>
    <id>http://tak3ncpp.github.io/2015/10/02/matrix4/</id>
    <published>2015-10-01T23:34:35.000Z</published>
    <updated>2015-10-02T04:26:57.890Z</updated>
    <content type="html"><![CDATA[<p><a href="https://vijos.org/p/1049" target="_blank" rel="external">https://vijos.org/p/1049</a><br>题目大意：顺次给出m个置换，反复使用这m个置换对初始序列进行操作，问k次置换后的序列。m&lt;=10, k<2^31。<a id="more"><br> 首先将这m个置换“合并”起来（算出这m个置换的乘积），然后接下来我们需要执行这个置换k/m次（取整，若有余数则剩下几步模拟即可）， 置换k/m次就相当于在前面乘以k/m个这样的矩阵。</2^31。<a></p>
<p>注意左乘和右乘的问题。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> siz <span class="number">100</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> Mytype int</span></span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line">Mytype mod;</span><br><span class="line"><span class="keyword">struct</span> matrix </span><br><span class="line">&#123;</span><br><span class="line">	Mytype a[siz][siz];</span><br><span class="line">	matrix <span class="keyword">operator</span>*(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		mem(res.a,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				<span class="keyword">if</span>(a[i][j])</span><br><span class="line">					<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;N;k++)</span><br><span class="line">						res.a[i][k]+=a[i][j]*y.a[j][k];</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">	matrix <span class="keyword">operator</span>+(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				res.a[i][j]=a[i][j]+y.a[i][j];</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">matrix <span class="title">qmod</span><span class="params">(matrix a,<span class="keyword">long</span> <span class="keyword">long</span> k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	matrix res;</span><br><span class="line">	mem(res.a,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">		res.a[i][i]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(k)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(k&amp;<span class="number">1</span>)</span><br><span class="line">			res=res*a;</span><br><span class="line">		a=a*a;</span><br><span class="line">		k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> m,k;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;N,&amp;m,&amp;k);</span><br><span class="line">	<span class="keyword">int</span> t=k%m;</span><br><span class="line">	matrix a,b;</span><br><span class="line">	mem(a.a,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">		a.a[i][i]=<span class="number">1</span>;</span><br><span class="line">	b=a;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		matrix c;</span><br><span class="line">		mem(c.a,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> tmp;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;tmp);</span><br><span class="line">			c.a[j][tmp-<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		a=c*a;</span><br><span class="line">		<span class="keyword">if</span>(i==t)b=a;</span><br><span class="line">	&#125;</span><br><span class="line">	a=qmod(a,k/m);</span><br><span class="line">	a=b*a;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">			<span class="keyword">if</span>(a.a[i][j])<span class="built_in">printf</span>(<span class="string">"%d "</span>,j+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>不用矩阵乘法也可以准确模拟该题，可以仿照快速幂的写法。 </p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> siz <span class="number">3</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> MAXN <span class="number">10000</span>+<span class="number">5</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> cpy(x,y) memcpy(x,y,sizeof(x))</span></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">struct</span> arr</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> a[<span class="number">110</span>];</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span><br><span class="line">	</span>&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">			a[i]=i;</span><br><span class="line">	&#125;</span><br><span class="line">	arr <span class="keyword">operator</span>*(<span class="keyword">const</span> arr &amp;b)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		arr t;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">			t.a[i]=a[b.a[i]];</span><br><span class="line">		<span class="keyword">return</span> t;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">arr <span class="title">qmod</span><span class="params">(arr a,<span class="keyword">int</span> k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	arr res;</span><br><span class="line">	res.init();</span><br><span class="line">	<span class="keyword">while</span>(k)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(k&amp;<span class="number">1</span>)res=res*a;</span><br><span class="line">		a=a*a;</span><br><span class="line">		k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> m,k;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;n,&amp;m,&amp;k);</span><br><span class="line">	<span class="keyword">int</span> x=k%m;</span><br><span class="line">	arr a,b;</span><br><span class="line">	a.init(),b.init();</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		arr tp;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;tp.a[j]);</span><br><span class="line">		a=a*tp;</span><br><span class="line">		<span class="keyword">if</span>(i==x)</span><br><span class="line">			b=a;</span><br><span class="line">	&#125;</span><br><span class="line">	a=qmod(a,k/m);</span><br><span class="line">	a=a*b;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d "</span>,a.a[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="https://vijos.org/p/1049">https://vijos.org/p/1049</a><br>题目大意：顺次给出m个置换，反复使用这m个置换对初始序列进行操作，问k次置换后的序列。m&lt;=10, k<2^31。]]>
    
    </summary>
    
      <category term="matrix" scheme="http://tak3ncpp.github.io/tags/matrix/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[hdu 3306]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/02/matrix3.2/"/>
    <id>http://tak3ncpp.github.io/2015/10/02/matrix3.2/</id>
    <published>2015-10-01T23:33:36.000Z</published>
    <updated>2015-10-02T03:43:27.622Z</updated>
    <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=3306" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=3306</a><br>题目大意：A(0) = 1 , A(1) = 1 , A(N) = X <em> A(N - 1) + Y </em> A(N - 2) (N &gt;= 2)；给定三个值N，X，Y求S(N):S(N) = A(0)2 +A(1)2+……+A(n)2。 <a id="more"></a>   </p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> N <span class="number">4</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> Mytype int</span></span><br><span class="line">Mytype mod;</span><br><span class="line"><span class="keyword">struct</span> matrix </span><br><span class="line">&#123;</span><br><span class="line">	Mytype a[N][N];</span><br><span class="line">	matrix <span class="keyword">operator</span>*(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		mem(res.a,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				<span class="keyword">if</span>(a[i][j])</span><br><span class="line">					<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;N;k++)</span><br><span class="line">						res.a[i][k]+=a[i][j]*y.a[j][k],res.a[i][k]%=mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">	matrix <span class="keyword">operator</span>+(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				res.a[i][j]=a[i][j]+y.a[i][j],res.a[i][j]%=mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">matrix <span class="title">qmod</span><span class="params">(matrix a,<span class="keyword">long</span> <span class="keyword">long</span> k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	matrix res;</span><br><span class="line">	mem(res.a,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">		res.a[i][i]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(k)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(k&amp;<span class="number">1</span>)</span><br><span class="line">			res=res*a;</span><br><span class="line">		a=a*a;</span><br><span class="line">		k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	mod=<span class="number">10007</span>;</span><br><span class="line">	<span class="keyword">long</span> <span class="keyword">long</span> m,x,y;</span><br><span class="line">	<span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%I64d%I64d%I64d"</span>,&amp;m,&amp;x,&amp;y))</span><br><span class="line">	&#123;</span><br><span class="line">		matrix a;</span><br><span class="line">		mem(a.a,<span class="number">0</span>);</span><br><span class="line">		x%=mod;</span><br><span class="line">		y%=mod;</span><br><span class="line">		a.a[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>,a.a[<span class="number">0</span>][<span class="number">1</span>]=<span class="number">1</span>,a.a[<span class="number">1</span>][<span class="number">1</span>]=x*x%mod;</span><br><span class="line">		a.a[<span class="number">1</span>][<span class="number">2</span>]=y*y%mod;</span><br><span class="line">		a.a[<span class="number">1</span>][<span class="number">3</span>]=<span class="number">2</span>*x*y%mod,a.a[<span class="number">2</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">		a.a[<span class="number">3</span>][<span class="number">1</span>]=x,a.a[<span class="number">3</span>][<span class="number">3</span>]=y;</span><br><span class="line">		a=qmod(a,m);</span><br><span class="line">		<span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">			ans+=a.a[<span class="number">0</span>][i];</span><br><span class="line">		ans%=mod;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=3306">http://acm.hdu.edu.cn/showproblem.php?pid=3306</a><br>题目大意：A(0) = 1 , A(1) = 1 , A(N) = X <em> A(N - 1) + Y </em> A(N - 2) (N &gt;= 2)；给定三个值N，X，Y求S(N):S(N) = A(0)2 +A(1)2+……+A(n)2。]]>
    
    </summary>
    
      <category term="matrix" scheme="http://tak3ncpp.github.io/tags/matrix/"/>
    
      <category term="二分" scheme="http://tak3ncpp.github.io/tags/%E4%BA%8C%E5%88%86/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
</feed>
