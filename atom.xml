<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Tak3n's Blog]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://tak3ncpp.github.io/"/>
  <updated>2015-10-07T14:49:02.722Z</updated>
  <id>http://tak3ncpp.github.io/</id>
  
  <author>
    <name><![CDATA[Tak3n]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[uva 1121]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/07/uva%201121/"/>
    <id>http://tak3ncpp.github.io/2015/10/07/uva 1121/</id>
    <published>2015-10-07T07:30:34.000Z</published>
    <updated>2015-10-07T14:49:02.722Z</updated>
    <content type="html"><![CDATA[<p>给一个长度为n的序列，问其连续子序列和大于等于s的最短长度。<a id="more"></a></p>
<p>先预处理S[i],两个指针扫，一个指向当前下标，另一个指向使s[i]-s[j]大于等于s且i-j最短的位置。<br>注意样例是错的，注意长度为n也不能满足条件的情况，输出0。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">10000000</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> debug puts(<span class="string">"-----"</span>)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">4000</span>+<span class="number">6</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> NV <span class="number">1000</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> NE <span class="number">10000</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100000</span>+<span class="number">3</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n,s;</span><br><span class="line">	<span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;s))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> ans=inf;</span><br><span class="line">		a[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">			a[i]+=a[i-<span class="number">1</span>];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(a[i]-a[j]&lt;s)<span class="keyword">continue</span>;</span><br><span class="line">			<span class="keyword">while</span>(a[i]-a[j]&gt;=s)</span><br><span class="line">				j++;</span><br><span class="line">			j--;</span><br><span class="line">			ans=min(i-j,ans);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans==inf?<span class="number">0</span>:ans);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>给一个长度为n的序列，问其连续子序列和大于等于s的最短长度。]]>
    
    </summary>
    
      <category term="DP" scheme="http://tak3ncpp.github.io/tags/DP/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[uva 10881]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/07/uva%2010881/"/>
    <id>http://tak3ncpp.github.io/2015/10/07/uva 10881/</id>
    <published>2015-10-07T07:30:34.000Z</published>
    <updated>2015-10-07T14:48:28.567Z</updated>
    <content type="html"><![CDATA[<p>长度为L的线段上有n只蚂蚁，它们如果相遇就反转方向，如果走出线段外就fell off。给出每个蚂蚁的初始位置和朝向，问时间T后每个蚂蚁的位置和朝向。<a id="more"></a>  </p>
<p> 性质一：每两个蚂蚁相遇之后，相当于交换它们的标号，行动轨迹不变。<br> 性质二：蚂蚁和蚂蚁之间的相对位置始终不变。<br>所以先处理每个蚂蚁的位置，再判断最终位置是否在线段上就成。  </p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">10000000</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> debug puts(<span class="string">"-----"</span>)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">10000</span>+<span class="number">6</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> NV <span class="number">1000</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> NE <span class="number">10000</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">int</span> a[maxn],b[maxn];</span><br><span class="line"><span class="keyword">int</span> r[maxn],rk[maxn];</span><br><span class="line"><span class="comment">//有起始点相同的蚂蚁就GG</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a[x]&lt;a[y];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> t;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">	<span class="keyword">int</span> cas=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span>(t--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> l,T,n;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;l,&amp;T,&amp;n);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">char</span> w;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">"%d %c"</span>,&amp;a[i],&amp;w);</span><br><span class="line">			<span class="keyword">if</span>(w==<span class="string">'R'</span>)b[i]=<span class="number">1</span>;</span><br><span class="line">			<span class="keyword">else</span> b[i]=<span class="number">0</span>;</span><br><span class="line">			r[i]=i;</span><br><span class="line">		&#125;</span><br><span class="line">		sort(r,r+n,cmp);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">			rk[r[i]]=i;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(b[i])a[i]+=T;</span><br><span class="line">			<span class="keyword">else</span> a[i]-=T;</span><br><span class="line">			r[i]=i;</span><br><span class="line">		&#125;</span><br><span class="line">		sort(r,r+n,cmp);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">			<span class="keyword">if</span>(a[r[i]]==a[r[i-<span class="number">1</span>]])b[r[i]]=b[r[i-<span class="number">1</span>]]=<span class="number">2</span>;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"Case #%d:\n"</span>,++cas);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> e=r[rk[i]];</span><br><span class="line">			<span class="keyword">if</span>(a[e]&lt;<span class="number">0</span>||a[e]&gt;l)</span><br><span class="line">				<span class="built_in">puts</span>(<span class="string">"Fell off"</span>);</span><br><span class="line">			<span class="keyword">else</span> </span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">"%d "</span>,a[e]);</span><br><span class="line">					<span class="keyword">if</span>(b[e]==<span class="number">2</span>)</span><br><span class="line">					<span class="built_in">puts</span>(<span class="string">"Turning"</span>);</span><br><span class="line">					<span class="keyword">else</span> <span class="keyword">if</span>(b[e]==<span class="number">1</span>)<span class="built_in">puts</span>(<span class="string">"R"</span>);</span><br><span class="line">					<span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"L"</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>长度为L的线段上有n只蚂蚁，它们如果相遇就反转方向，如果走出线段外就fell off。给出每个蚂蚁的初始位置和朝向，问时间T后每个蚂蚁的位置和朝向。]]>
    
    </summary>
    
      <category term="机智题" scheme="http://tak3ncpp.github.io/tags/%E6%9C%BA%E6%99%BA%E9%A2%98/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[矩阵十题]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/02/matrix%E5%8D%81%E9%A2%98/"/>
    <id>http://tak3ncpp.github.io/2015/10/02/matrix十题/</id>
    <published>2015-10-02T00:30:34.000Z</published>
    <updated>2015-10-02T03:38:19.437Z</updated>
    <content type="html"><![CDATA[<p>闲来无事，整理链接，把矩阵10题重新做一遍，难得某oj恢复了。matrix67原来的文章由于博客更新还是其他的一些缘故，后面一些内容挂了，不如看<a href="http://www.cnblogs.com/frog112111/tag/%E7%9F%A9%E9%98%B5%E7%BB%8F%E5%85%B8%E7%AE%97%E6%B3%95/" target="_blank" rel="external">这个链接</a>。<a id="more"></a><br>感觉做这些题的过程就是优化模板的过程。</p>
<ul>
<li><a href="http://tak3ncpp.github.io/2015/10/02/matrix1/">经典题目1</a></li>
<li><a href="http://tak3ncpp.github.io/2015/10/02/matrix2/">经典题目2</a></li>
<li><a href="http://tak3ncpp.github.io/2015/10/02/matrix3/">经典题目3</a></li>
<li><a href="http://tak3ncpp.github.io/2015/10/02/matrix4/">经典题目4</a></li>
<li><a href="http://tak3ncpp.github.io/2015/10/02/matrix5/">经典题目5</a></li>
<li><a href="http://tak3ncpp.github.io/2015/10/02/matrix6/">经典题目6</a></li>
<li><a href="http://tak3ncpp.github.io/2015/10/02/matrix7/">经典题目7</a></li>
<li><a href="http://tak3ncpp.github.io/2015/10/02/matrix8/">经典题目8</a></li>
<li><a href="http://tak3ncpp.github.io/2015/10/02/matrix9/">经典题目9</a></li>
<li><a href="http://tak3ncpp.github.io/2015/10/02/matrix10/">经典题目10</a></li>
</ul>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>闲来无事，整理链接，把矩阵10题重新做一遍，难得某oj恢复了。matrix67原来的文章由于博客更新还是其他的一些缘故，后面一些内容挂了，不如看<a href="http://www.cnblogs.com/frog112111/tag/%E7%9F%A9%E9%98%B5%E7%BB%8F%E5%85%B8%E7%AE%97%E6%B3%95/">这个链接</a>。]]>
    
    </summary>
    
      <category term="matrix" scheme="http://tak3ncpp.github.io/tags/matrix/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[poj 2778]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/02/matrix10/"/>
    <id>http://tak3ncpp.github.io/2015/10/02/matrix10/</id>
    <published>2015-10-01T23:49:34.000Z</published>
    <updated>2015-10-02T04:16:07.445Z</updated>
    <content type="html"><![CDATA[<p><a href="http://poj.org/problem?id=2778" target="_blank" rel="external">http://poj.org/problem?id=2778</a><br>    题目大意是，检测所有可能的n位DNA串有多少个DNA串中不含有指定的病毒片段。合法的DNA只能由ACTG四个字符构成。题目将给出10个以内的病毒片段，每个片段长度不超过10。数据规模n&lt;=2 000 000 000。<a id="more"></a></p>
<p>这道题真的让我很痛苦，debug3天未果。<br>AC自动机加矩阵乘法。<br>核心思想是，一个长度为n的字符串的匹配相当于在一个构造好的字典树上从root开始走n步。所以所有的走法也都是在这个字典树上进行的。关键就在于不能走到ed[i]的节点的判断，与ed[i]等价的节点也属于不能走到的节点，所以如果当前节点的fail节点ed为1时，当前节点ed也为1.</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> debug puts(<span class="string">"-----"</span>)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">100</span>+<span class="number">5</span></span></span><br><span class="line"><span class="keyword">int</span> siz;</span><br><span class="line"><span class="keyword">int</span> mod=<span class="number">100000</span>;</span><br><span class="line"><span class="keyword">struct</span> matrix </span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">long</span> <span class="keyword">long</span> a[maxn][maxn];</span><br><span class="line">	matrix <span class="keyword">operator</span>*(<span class="keyword">const</span> matrix &amp;t)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		mem(res.a,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;siz;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;siz;j++)</span><br><span class="line">				<span class="keyword">if</span>(a[i][j])</span><br><span class="line">					<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;siz;k++)</span><br><span class="line">						res.a[i][k]=(res.a[i][k]+a[i][j]*t.a[j][k])%mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">	matrix <span class="keyword">operator</span>*=(<span class="keyword">const</span> matrix &amp;t)</span><br><span class="line">	&#123;</span><br><span class="line">		*<span class="keyword">this</span>=t* *<span class="keyword">this</span>;</span><br><span class="line">		<span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;a;</span><br><span class="line"><span class="keyword">struct</span> trie</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> next[maxn][<span class="number">4</span>],fail[maxn],ed[maxn];</span><br><span class="line">	<span class="built_in">map</span>&lt;<span class="keyword">char</span>,<span class="keyword">int</span>&gt;mp;</span><br><span class="line">	<span class="keyword">int</span> root,L;</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">newnode</span><span class="params">()</span></span><br><span class="line">	</span>&#123;</span><br><span class="line">		mem(next[L],-<span class="number">1</span>);</span><br><span class="line">		ed[L]=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">return</span> L++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span><br><span class="line">	</span>&#123;</span><br><span class="line">		L=<span class="number">0</span>;</span><br><span class="line">		root=newnode();</span><br><span class="line">		mem(a.a,<span class="number">0</span>);</span><br><span class="line">		mp[<span class="string">'A'</span>]=<span class="number">0</span>,mp[<span class="string">'C'</span>]=<span class="number">1</span>,mp[<span class="string">'G'</span>]=<span class="number">2</span>,mp[<span class="string">'T'</span>]=<span class="number">3</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">char</span> s[])</span></span><br><span class="line">	</span>&#123;</span><br><span class="line">		<span class="keyword">int</span> len=<span class="built_in">strlen</span>(s);</span><br><span class="line">		<span class="keyword">int</span> now=root;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> &amp;t=next[now][mp[s[i]]];</span><br><span class="line">			<span class="keyword">if</span>(t==-<span class="number">1</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				t=newnode();</span><br><span class="line">			&#125;</span><br><span class="line">			now=t;</span><br><span class="line">		&#125;</span><br><span class="line">		ed[now]=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span></span><br><span class="line">	</span>&#123;</span><br><span class="line">		<span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">			<span class="keyword">if</span>(next[root][i]==-<span class="number">1</span>)</span><br><span class="line">				next[root][i]=root;</span><br><span class="line">			<span class="keyword">else</span> </span><br><span class="line">			&#123;</span><br><span class="line">				fail[next[root][i]]=root;</span><br><span class="line">				q.push(next[root][i]);</span><br><span class="line">			&#125;</span><br><span class="line">		<span class="keyword">while</span>(!q.empty())</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> now=q.front();</span><br><span class="line">			q.pop();</span><br><span class="line">			<span class="keyword">if</span>(ed[fail[now]])</span><br><span class="line">				ed[now]=<span class="number">1</span>;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">				<span class="keyword">if</span>(next[now][i]==-<span class="number">1</span>)</span><br><span class="line">					next[now][i]=next[fail[now]][i];</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">				&#123;</span><br><span class="line">					fail[next[now][i]]=next[fail[now]][i];</span><br><span class="line">					q.push(next[now][i]);</span><br><span class="line">				&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;L;i++)</span><br><span class="line">		&#123;</span><br><span class="line">				<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)</span><br><span class="line">					<span class="keyword">if</span>(ed[next[i][j]]==<span class="number">0</span>)</span><br><span class="line">							a.a[i][next[i][j]]++;</span><br><span class="line">		&#125;</span><br><span class="line">		siz=L;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line">trie ac;</span><br><span class="line"><span class="function">matrix <span class="title">qmod</span><span class="params">(<span class="keyword">int</span> k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	matrix res;</span><br><span class="line">	mem(res.a,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;siz;i++)</span><br><span class="line">		res.a[i][i]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(k)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(k&amp;<span class="number">1</span>)</span><br><span class="line">			res*=a;</span><br><span class="line">		a*=a;</span><br><span class="line">		k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(matrix t)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;siz;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;siz;j++)</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%d "</span>,t.a[i][j]);</span><br><span class="line">		<span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">20</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> m,n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;m,&amp;n);</span><br><span class="line">	matrix t;</span><br><span class="line">	ac.init();</span><br><span class="line">	<span class="keyword">while</span>(m--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">		ac.insert(s);</span><br><span class="line">	&#125;</span><br><span class="line">	ac.build();</span><br><span class="line">	t=qmod(n);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;siz;i++)</span><br><span class="line">	&#123;</span><br><span class="line">			ans+=t.a[<span class="number">0</span>][i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans%mod);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://poj.org/problem?id=2778">http://poj.org/problem?id=2778</a><br>    题目大意是，检测所有可能的n位DNA串有多少个DNA串中不含有指定的病毒片段。合法的DNA只能由ACTG四个字符构成。题目将给出10个以内的病毒片段，每个片段长度不超过10。数据规模n&lt;=2 000 000 000。]]>
    
    </summary>
    
      <category term="AC自动机" scheme="http://tak3ncpp.github.io/tags/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/"/>
    
      <category term="matrix" scheme="http://tak3ncpp.github.io/tags/matrix/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[poj 3420]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/02/matrix9.1/"/>
    <id>http://tak3ncpp.github.io/2015/10/02/matrix9.1/</id>
    <published>2015-10-01T23:39:39.000Z</published>
    <updated>2015-10-02T04:18:04.411Z</updated>
    <content type="html"><![CDATA[<p><a href="http://poj.org/problem?id=3420" target="_blank" rel="external">http://poj.org/problem?id=3420</a><br>poj 2663升级版，注意不用的边可以删除以缩小矩阵规模，可以有自环。<a id="more"></a>  </p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> siz <span class="number">6</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> Mytype int</span></span><br><span class="line"><span class="keyword">int</span> N=<span class="number">6</span>;</span><br><span class="line">Mytype mod;</span><br><span class="line"><span class="keyword">struct</span> matrix </span><br><span class="line">&#123;</span><br><span class="line">	Mytype a[siz][siz];</span><br><span class="line">	matrix <span class="keyword">operator</span>*(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		mem(res.a,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				<span class="keyword">if</span>(a[i][j])</span><br><span class="line">					<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;N;k++)</span><br><span class="line">						res.a[i][k]+=a[i][j]*y.a[j][k],res.a[i][k]%=mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">	matrix <span class="keyword">operator</span>+(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				res.a[i][j]=a[i][j]+y.a[i][j],res.a[i][j]%=mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">	matrix <span class="keyword">operator</span>*=(<span class="keyword">const</span> matrix &amp;y)</span><br><span class="line">	&#123;</span><br><span class="line">		*<span class="keyword">this</span>=y* *<span class="keyword">this</span>;</span><br><span class="line">		<span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">matrix <span class="title">qmod</span><span class="params">(matrix a,<span class="keyword">int</span> k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	matrix res;</span><br><span class="line">	mem(res.a,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">		res.a[i][i]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(k)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(k&amp;<span class="number">1</span>)</span><br><span class="line">			res*=a;</span><br><span class="line">		a*=a;</span><br><span class="line">		k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">35</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    matrix a;</span><br><span class="line">    mem(a.a,<span class="number">0</span>);</span><br><span class="line">    a.a[<span class="number">4</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">5</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">3</span>][<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">5</span>][<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">2</span>][<span class="number">3</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">1</span>][<span class="number">4</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">5</span>][<span class="number">4</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">0</span>][<span class="number">5</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">1</span>][<span class="number">5</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">2</span>][<span class="number">5</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">4</span>][<span class="number">5</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">5</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">5</span>][<span class="number">5</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;k,&amp;mod),k)</span><br><span class="line">    &#123;</span><br><span class="line">        matrix ans=qmod(a,k+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> res=ans.a[<span class="number">5</span>][<span class="number">0</span>];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,res);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://poj.org/problem?id=3420">http://poj.org/problem?id=3420</a><br>poj 2663升级版，注意不用的边可以删除以缩小矩阵规模，可以有自环。]]>
    
    </summary>
    
      <category term="matrix" scheme="http://tak3ncpp.github.io/tags/matrix/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[poj 2663]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/02/matrix9/"/>
    <id>http://tak3ncpp.github.io/2015/10/02/matrix9/</id>
    <published>2015-10-01T23:39:34.000Z</published>
    <updated>2015-10-02T04:17:51.281Z</updated>
    <content type="html"><![CDATA[<p> <a href="http://poj.org/problem?id=2663" target="_blank" rel="external">http://poj.org/problem?id=2663</a><br>用1 x 2的多米诺骨牌填满M x N的矩形有多少种方案，M&lt;=5，N<2^31，输出答案mod p的结果.<a="" id="more"><br>我们以M=3为例进行讲解。假设我们把这个矩形横着放在电脑屏幕上，从右往左一列一列地进行填充。其中前n-2列已经填满了，第n-1列参差不齐。现在我 们要做的事情是把第n-1列也填满，将状态转移到第n列上去。由于第n-1列的状态不一样（有8种不同的状态），因此我们需要分情况进行讨论。在图中，我 把转移前8种不同的状态放在左边，转移后8种不同的状态放在右边，左边的某种状态可以转移到右边的某种状态就在它们之间连一根线。注意为了保证方案不重 复，状态转移时我们不允许在第n-1列竖着放一个多米诺骨牌（例如左边第2种状态不能转移到右边第4种状态），否则这将与另一种转移前的状态重复。把这8 种状态的转移关系画成一个有向图，那么问题就变成了这样：从状态111出发，恰好经过n步回到这个状态有多少种方案。比如，n=2时有3种方 案，111-&gt;011-&gt;111、111-&gt;110-&gt;111和111-&gt;000-&gt;111，这与用多米诺骨牌覆盖 3x2矩形的方案一一对应。这样这个题目就转化为了我们前面的例题8.<br><img src="/img/MATRIX-solve.png" alt="">  </2^31，输出答案mod></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> siz <span class="number">6</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> Mytype int</span></span><br><span class="line"><span class="keyword">int</span> N=<span class="number">6</span>;</span><br><span class="line">Mytype mod = <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">struct</span> matrix </span><br><span class="line">&#123;</span><br><span class="line">	Mytype a[siz][siz];</span><br><span class="line">	matrix <span class="keyword">operator</span>*(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		mem(res.a,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				<span class="keyword">if</span>(a[i][j])</span><br><span class="line">					<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;N;k++)</span><br><span class="line">						res.a[i][k]+=a[i][j]*y.a[j][k];</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">	matrix <span class="keyword">operator</span>+(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				res.a[i][j]=a[i][j]+y.a[i][j],res.a[i][j]%=mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">	matrix <span class="keyword">operator</span>*=(<span class="keyword">const</span> matrix &amp;y)</span><br><span class="line">	&#123;</span><br><span class="line">		*<span class="keyword">this</span>=y* *<span class="keyword">this</span>;</span><br><span class="line">		<span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">matrix <span class="title">qmod</span><span class="params">(matrix a,<span class="keyword">int</span> k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	matrix res;</span><br><span class="line">	mem(res.a,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">		res.a[i][i]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(k)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(k&amp;<span class="number">1</span>)</span><br><span class="line">			res*=a;</span><br><span class="line">		a*=a;</span><br><span class="line">		k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">35</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    matrix a;</span><br><span class="line">    mem(a.a,<span class="number">0</span>);</span><br><span class="line">    a.a[<span class="number">4</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">3</span>][<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">5</span>][<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">2</span>][<span class="number">3</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">1</span>][<span class="number">4</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">5</span>][<span class="number">4</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">0</span>][<span class="number">5</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">2</span>][<span class="number">5</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">4</span>][<span class="number">5</span>]=<span class="number">1</span>;</span><br><span class="line">    a.a[<span class="number">5</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    matrix res=a;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">30</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ans[i]=res.a[<span class="number">0</span>][<span class="number">5</span>];</span><br><span class="line">        res*=a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n),~n)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans[n]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><a href="http://tak3ncpp.github.io/2015/10/02/matrix9.1/">相关练习</a></li>
</ul>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p> <a href="http://poj.org/problem?id=2663">http://poj.org/problem?id=2663</a><br>用1 x 2的多米诺骨牌填满M x N的矩形有多少种方案，M&lt;=5，N<2^31，输出答案mod p的结果.]]>
    
    </summary>
    
      <category term="matrix" scheme="http://tak3ncpp.github.io/tags/matrix/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[poj 3613]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/02/matrix8.1/"/>
    <id>http://tak3ncpp.github.io/2015/10/02/matrix8.1/</id>
    <published>2015-10-01T23:38:39.000Z</published>
    <updated>2015-10-02T04:26:02.369Z</updated>
    <content type="html"><![CDATA[<p><a href="http://poj.org/problem?id=3613" target="_blank" rel="external">http://poj.org/problem?id=3613</a><br>题目大意:   给出一张无向连通图，求S到E经过k条边的最短路。<a id="more"></a><br>把矩阵乘法换成Floyd，注意各种初始化以及点的数量。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> siz <span class="number">102</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> Mytype long long</span></span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line">Mytype mod = <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">struct</span> matrix </span><br><span class="line">&#123;</span><br><span class="line">	Mytype a[siz][siz];</span><br><span class="line">	matrix <span class="keyword">operator</span>*(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">			res.a[i][j]=inf;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;N;k++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">				<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">					res.a[i][j]=min(res.a[i][j],a[i][k]+y.a[k][j]);</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">matrix <span class="title">qmod</span><span class="params">(matrix a,<span class="keyword">int</span> k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	matrix res=a;</span><br><span class="line">	k--;</span><br><span class="line">	<span class="keyword">while</span>(k)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(k&amp;<span class="number">1</span>)</span><br><span class="line">			res=res*a;</span><br><span class="line">		a=a*a;</span><br><span class="line">		k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(matrix k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%d "</span>,k.a[i][j]);</span><br><span class="line">		<span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">	&#125;	</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; mp;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n,t,s,e;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&amp;n,&amp;t,&amp;s,&amp;e);</span><br><span class="line">	matrix a;</span><br><span class="line">	N=t+<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">		a.a[i][j]=inf;</span><br><span class="line">	<span class="keyword">int</span> ecnt=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(t--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> l,u,v;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;l,&amp;u,&amp;v);</span><br><span class="line">		<span class="keyword">if</span>(!mp[u])mp[u]=ecnt++;</span><br><span class="line">		<span class="keyword">if</span>(!mp[v])mp[v]=ecnt++;</span><br><span class="line">		u=mp[u]-<span class="number">1</span>,v=mp[v]-<span class="number">1</span>;</span><br><span class="line">		a.a[u][v]=a.a[v][u]=l;</span><br><span class="line">	&#125;</span><br><span class="line">	N=ecnt-<span class="number">1</span>;</span><br><span class="line">	a=qmod(a,n);</span><br><span class="line">	s=mp[s]-<span class="number">1</span>,e=mp[e]-<span class="number">1</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a.a[s][e]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://poj.org/problem?id=3613">http://poj.org/problem?id=3613</a><br>题目大意:   给出一张无向连通图，求S到E经过k条边的最短路。]]>
    
    </summary>
    
      <category term="Floyd" scheme="http://tak3ncpp.github.io/tags/Floyd/"/>
    
      <category term="matrix" scheme="http://tak3ncpp.github.io/tags/matrix/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[hdu 2157]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/02/matrix8/"/>
    <id>http://tak3ncpp.github.io/2015/10/02/matrix8/</id>
    <published>2015-10-01T23:38:36.000Z</published>
    <updated>2015-10-02T04:25:29.389Z</updated>
    <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2157" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=2157</a><br> 给定一个有向图，问从A点恰好走k步（允许重复经过边）到达B点的方案数mod p的值<a id="more"></a><br>    把给定的图转为邻接矩阵，即A(i,j)=1当且仅当存在一条边i-&gt;j。令C=A<em>A，那么C(i,j)=ΣA(i,k)</em>A(k,j)，实际上就等于从点i到点j恰好经过2条边的路径数（枚举k为中转点）。类似地，C*A的第i行第j列就表示从i到j经过3条边的路径数。同理，如果要求经过k步的路径数，我们只需要二分求出A^k即可。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> siz <span class="number">20</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> Mytype long long</span></span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line">Mytype mod = <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">struct</span> matrix </span><br><span class="line">&#123;</span><br><span class="line">	Mytype a[siz][siz];</span><br><span class="line">	matrix <span class="keyword">operator</span>*(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		mem(res.a,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				<span class="keyword">if</span>(a[i][j])</span><br><span class="line">					<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;N;k++)</span><br><span class="line">						res.a[i][k]+=a[i][j]*y.a[j][k],res.a[i][k]%=mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">	matrix <span class="keyword">operator</span>+(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				res.a[i][j]=a[i][j]+y.a[i][j],res.a[i][j]%=mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">	matrix <span class="keyword">operator</span>*=(<span class="keyword">const</span> matrix &amp;y)</span><br><span class="line">	&#123;</span><br><span class="line">		*<span class="keyword">this</span>=y* *<span class="keyword">this</span>;</span><br><span class="line">		<span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">matrix <span class="title">qmod</span><span class="params">(matrix a,<span class="keyword">int</span> k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	matrix res;</span><br><span class="line">	mem(res.a,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">		res.a[i][i]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(k)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(k&amp;<span class="number">1</span>)</span><br><span class="line">			res*=a;</span><br><span class="line">		a*=a;</span><br><span class="line">		k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> m;</span><br><span class="line">	<span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;N,&amp;m),N+m)</span><br><span class="line">	&#123;</span><br><span class="line">		matrix a;</span><br><span class="line">		mem(a.a,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">while</span>(m--)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> u,v;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</span><br><span class="line">			a.a[u][v]=<span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">int</span> t;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">		<span class="keyword">while</span>(t--)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> x,y,k;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;x,&amp;y,&amp;k);</span><br><span class="line">			matrix t=qmod(a,k);</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,t.a[x][y]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><a href="http://tak3ncpp.github.io/2015/10/02/matrix8.1/">相关练习</a></li>
</ul>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2157">http://acm.hdu.edu.cn/showproblem.php?pid=2157</a><br> 给定一个有向图，问从A点恰好走k步（允许重复经过边）到达B点的方案数mod p的值]]>
    
    </summary>
    
      <category term="matrix" scheme="http://tak3ncpp.github.io/tags/matrix/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[hdu 1757]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/02/matrix7.1/"/>
    <id>http://tak3ncpp.github.io/2015/10/02/matrix7.1/</id>
    <published>2015-10-01T23:37:39.000Z</published>
    <updated>2015-10-02T04:17:30.549Z</updated>
    <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1757" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=1757</a><br>If x &lt; 10   ，则  f(x) = x.<br>If x &gt;= 10 ，则  f(x) = a0 <em> f(x-1) + a1 </em> f(x-2) + a2 <em> f(x-3) + …… + a9 </em> f(x-10);<br>给出k，m和a0~a9，求f(k)%m，  k<2*10^9 ,="" m="" <="" 10^5<a="" id="more">  </2*10^9></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> siz <span class="number">10</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> Mytype long long</span></span><br><span class="line"><span class="keyword">int</span> N=<span class="number">10</span>;</span><br><span class="line">Mytype mod;</span><br><span class="line"><span class="keyword">struct</span> matrix </span><br><span class="line">&#123;</span><br><span class="line">	Mytype a[siz][siz];</span><br><span class="line">	matrix <span class="keyword">operator</span>*(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		mem(res.a,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				<span class="keyword">if</span>(a[i][j])</span><br><span class="line">					<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;N;k++)</span><br><span class="line">						res.a[i][k]+=a[i][j]*y.a[j][k],res.a[i][k]%=mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">	matrix <span class="keyword">operator</span>+(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				res.a[i][j]=a[i][j]+y.a[i][j],res.a[i][j]%=mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">	matrix <span class="keyword">operator</span>*=(<span class="keyword">const</span> matrix &amp;y)</span><br><span class="line">	&#123;</span><br><span class="line">		*<span class="keyword">this</span>=y* *<span class="keyword">this</span>;</span><br><span class="line">		<span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">matrix <span class="title">qmod</span><span class="params">(matrix a,<span class="keyword">int</span> k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	matrix res;</span><br><span class="line">	mem(res.a,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">		res.a[i][i]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(k)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(k&amp;<span class="number">1</span>)</span><br><span class="line">			res*=a;</span><br><span class="line">		a*=a;</span><br><span class="line">		k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> k;</span><br><span class="line">	<span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;k,&amp;mod))</span><br><span class="line">	&#123;	</span><br><span class="line">		matrix t;</span><br><span class="line">		mem(t.a,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">"%I64d"</span>,&amp;t.a[<span class="number">0</span>][i]);</span><br><span class="line">		<span class="keyword">if</span>(k&lt;<span class="number">10</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,k);</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">9</span>;i++)</span><br><span class="line">			t.a[i+<span class="number">1</span>][i]=<span class="number">1</span>;</span><br><span class="line">		t=qmod(t,k-<span class="number">9</span>);</span><br><span class="line">		<span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">			ans+=t.a[<span class="number">0</span>][i]*(<span class="number">9</span>-i),ans%=mod;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%I64d\n"</span>,ans);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1757">http://acm.hdu.edu.cn/showproblem.php?pid=1757</a><br>If x &lt; 10   ，则  f(x) = x.<br>If x &gt;= 10 ，则  f(x) = a0 <em> f(x-1) + a1 </em> f(x-2) + a2 <em> f(x-3) + …… + a9 </em> f(x-10);<br>给出k，m和a0~a9，求f(k)%m，  k<2*10^9 , m < 10^5]]>
    
    </summary>
    
      <category term="matrix" scheme="http://tak3ncpp.github.io/tags/matrix/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[voj 1067]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/02/matrix7/"/>
    <id>http://tak3ncpp.github.io/2015/10/02/matrix7/</id>
    <published>2015-10-01T23:37:34.000Z</published>
    <updated>2015-10-02T03:58:48.920Z</updated>
    <content type="html"><![CDATA[<p><a href="https://vijos.org/p/1067" target="_blank" rel="external">https://vijos.org/p/1067</a><br>题目大意：有n个监狱排成一列，每次最多可以往前走k个监狱，问走到第n个监狱有多少种方案，结果mod 7777777<br>1&lt;=k&lt;=10, 1&lt;=n&lt;=2^31-1 <a id="more"></a>  </p>
<p>看起来像是一道水DP，由于满足一定的递推关系，矩阵的效率是高于DP的，我曾做过这个比较。<br>先DP前k项，再矩阵快速幂求A的n-k次方。 </p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> siz <span class="number">10</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> Mytype long long</span></span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line">Mytype mod = <span class="number">7777777</span>;</span><br><span class="line"><span class="keyword">struct</span> matrix </span><br><span class="line">&#123;</span><br><span class="line">	Mytype a[siz][siz];</span><br><span class="line">	matrix <span class="keyword">operator</span>*(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		mem(res.a,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				<span class="keyword">if</span>(a[i][j])</span><br><span class="line">					<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;N;k++)</span><br><span class="line">						res.a[i][k]+=a[i][j]*y.a[j][k],res.a[i][k]%=mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">	matrix <span class="keyword">operator</span>+(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				res.a[i][j]=a[i][j]+y.a[i][j],res.a[i][j]%=mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">matrix <span class="title">qmod</span><span class="params">(matrix a,<span class="keyword">int</span> k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	matrix res;</span><br><span class="line">	mem(res.a,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">		res.a[i][i]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(k)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(k&amp;<span class="number">1</span>)</span><br><span class="line">			res=a*res;</span><br><span class="line">		a=a*a;</span><br><span class="line">		k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;N,&amp;n);</span><br><span class="line">	<span class="keyword">int</span> dp[N+<span class="number">1</span>],sum[N+<span class="number">1</span>];</span><br><span class="line">	dp[<span class="number">1</span>]=sum[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=N;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		dp[i]=sum[i-<span class="number">1</span>]+<span class="number">1</span>;</span><br><span class="line">		sum[i]=sum[i-<span class="number">1</span>]+dp[i];</span><br><span class="line">	&#125;</span><br><span class="line">	matrix a;</span><br><span class="line">	mem(a.a,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">		a.a[<span class="number">0</span>][i]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N-<span class="number">1</span>;i++)</span><br><span class="line">		a.a[i+<span class="number">1</span>][i]=<span class="number">1</span>;</span><br><span class="line">	a=qmod(a,n-N);</span><br><span class="line">	<span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">		ans+=a.a[<span class="number">0</span>][i]*dp[N-i],ans%=mod;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><a href="http://tak3ncpp.github.io/2015/10/02/matrix7.1/">相关练习</a></li>
</ul>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="https://vijos.org/p/1067">https://vijos.org/p/1067</a><br>题目大意：有n个监狱排成一列，每次最多可以往前走k个监狱，问走到第n个监狱有多少种方案，结果mod 7777777<br>1&lt;=k&lt;=10, 1&lt;=n&lt;=2^31-1]]>
    
    </summary>
    
      <category term="DP" scheme="http://tak3ncpp.github.io/tags/DP/"/>
    
      <category term="matrix" scheme="http://tak3ncpp.github.io/tags/matrix/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[poj 3070]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/02/matrix6/"/>
    <id>http://tak3ncpp.github.io/2015/10/02/matrix6/</id>
    <published>2015-10-01T23:36:35.000Z</published>
    <updated>2015-10-02T04:26:41.051Z</updated>
    <content type="html"><![CDATA[<p>给定n和p，求第n个Fibonacci数mod p的值，n不超过2^31.<a id="more"></a><br>根据前面的一些思路，现在我们需要构造一个2 x 2的矩阵，使得它乘以(a,b)得到的结果是(b,a+b)。每多乘一次这个矩阵，这两个数就会多迭代一次。那么，我们把这个2 x 2的矩阵自乘n次，再乘以(0,1)就可以得到第n个Fibonacci数了。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> siz <span class="number">100</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> Mytype int</span></span><br><span class="line"><span class="keyword">int</span> N=<span class="number">2</span>;</span><br><span class="line">Mytype mod = <span class="number">10000</span>;</span><br><span class="line"><span class="keyword">struct</span> matrix </span><br><span class="line">&#123;</span><br><span class="line">	Mytype a[siz][siz];</span><br><span class="line">	matrix <span class="keyword">operator</span>*(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		mem(res.a,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				<span class="keyword">if</span>(a[i][j])</span><br><span class="line">					<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;N;k++)</span><br><span class="line">						res.a[i][k]+=a[i][j]*y.a[j][k],res.a[i][k]%=mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">	matrix <span class="keyword">operator</span>+(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				res.a[i][j]=a[i][j]+y.a[i][j],res.a[i][j]%=mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">matrix <span class="title">qmod</span><span class="params">(matrix a,<span class="keyword">int</span> k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	matrix res;</span><br><span class="line">	mem(res.a,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">		res.a[i][i]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(k)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(k&amp;<span class="number">1</span>)</span><br><span class="line">			res=a*res;</span><br><span class="line">		a=a*a;</span><br><span class="line">		k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> t;</span><br><span class="line">	<span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t),~t)</span><br><span class="line">	&#123;</span><br><span class="line">		matrix a;</span><br><span class="line">		a.a[<span class="number">0</span>][<span class="number">0</span>]=a.a[<span class="number">0</span>][<span class="number">1</span>]=a.a[<span class="number">1</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">		a.a[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">		a=qmod(a,t);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a.a[<span class="number">1</span>][<span class="number">0</span>]);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>给定n和p，求第n个Fibonacci数mod p的值，n不超过2^31.]]>
    
    </summary>
    
      <category term="matrix" scheme="http://tak3ncpp.github.io/tags/matrix/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[《算法艺术与信息学竞赛》207页]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/02/matrix5/"/>
    <id>http://tak3ncpp.github.io/2015/10/02/matrix5/</id>
    <published>2015-10-01T23:35:35.000Z</published>
    <updated>2015-10-02T03:51:41.681Z</updated>
    <content type="html"><![CDATA[<p>   大家自己去看看吧，书上讲得很详细。解题方法和上一题类似，都是用矩阵来表示操作，然后二分求最终状态。</p>
<p>我去看了这道题，确实和前面的题有雷同，比较值得注意的是，srbga始终围绕图的形式来讲矩阵，这一点我觉得很有价值。<a id="more"></a>   </p>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>   大家自己去看看吧，书上讲得很详细。解题方法和上一题类似，都是用矩阵来表示操作，然后二分求最终状态。</p>
<p>我去看了这道题，确实和前面的题有雷同，比较值得注意的是，srbga始终围绕图的形式来讲矩阵，这一点我觉得很有价值。]]>
    
    </summary>
    
      <category term="matrix" scheme="http://tak3ncpp.github.io/tags/matrix/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[voj 1049]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/02/matrix4/"/>
    <id>http://tak3ncpp.github.io/2015/10/02/matrix4/</id>
    <published>2015-10-01T23:34:35.000Z</published>
    <updated>2015-10-02T04:26:57.890Z</updated>
    <content type="html"><![CDATA[<p><a href="https://vijos.org/p/1049" target="_blank" rel="external">https://vijos.org/p/1049</a><br>题目大意：顺次给出m个置换，反复使用这m个置换对初始序列进行操作，问k次置换后的序列。m&lt;=10, k<2^31。<a id="more"><br> 首先将这m个置换“合并”起来（算出这m个置换的乘积），然后接下来我们需要执行这个置换k/m次（取整，若有余数则剩下几步模拟即可）， 置换k/m次就相当于在前面乘以k/m个这样的矩阵。</2^31。<a></p>
<p>注意左乘和右乘的问题。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> siz <span class="number">100</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> Mytype int</span></span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line">Mytype mod;</span><br><span class="line"><span class="keyword">struct</span> matrix </span><br><span class="line">&#123;</span><br><span class="line">	Mytype a[siz][siz];</span><br><span class="line">	matrix <span class="keyword">operator</span>*(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		mem(res.a,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				<span class="keyword">if</span>(a[i][j])</span><br><span class="line">					<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;N;k++)</span><br><span class="line">						res.a[i][k]+=a[i][j]*y.a[j][k];</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">	matrix <span class="keyword">operator</span>+(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				res.a[i][j]=a[i][j]+y.a[i][j];</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">matrix <span class="title">qmod</span><span class="params">(matrix a,<span class="keyword">long</span> <span class="keyword">long</span> k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	matrix res;</span><br><span class="line">	mem(res.a,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">		res.a[i][i]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(k)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(k&amp;<span class="number">1</span>)</span><br><span class="line">			res=res*a;</span><br><span class="line">		a=a*a;</span><br><span class="line">		k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> m,k;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;N,&amp;m,&amp;k);</span><br><span class="line">	<span class="keyword">int</span> t=k%m;</span><br><span class="line">	matrix a,b;</span><br><span class="line">	mem(a.a,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">		a.a[i][i]=<span class="number">1</span>;</span><br><span class="line">	b=a;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		matrix c;</span><br><span class="line">		mem(c.a,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> tmp;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;tmp);</span><br><span class="line">			c.a[j][tmp-<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		a=c*a;</span><br><span class="line">		<span class="keyword">if</span>(i==t)b=a;</span><br><span class="line">	&#125;</span><br><span class="line">	a=qmod(a,k/m);</span><br><span class="line">	a=b*a;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">			<span class="keyword">if</span>(a.a[i][j])<span class="built_in">printf</span>(<span class="string">"%d "</span>,j+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>不用矩阵乘法也可以准确模拟该题，可以仿照快速幂的写法。 </p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> siz <span class="number">3</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> MAXN <span class="number">10000</span>+<span class="number">5</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> cpy(x,y) memcpy(x,y,sizeof(x))</span></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">struct</span> arr</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> a[<span class="number">110</span>];</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span><br><span class="line">	</span>&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">			a[i]=i;</span><br><span class="line">	&#125;</span><br><span class="line">	arr <span class="keyword">operator</span>*(<span class="keyword">const</span> arr &amp;b)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		arr t;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">			t.a[i]=a[b.a[i]];</span><br><span class="line">		<span class="keyword">return</span> t;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">arr <span class="title">qmod</span><span class="params">(arr a,<span class="keyword">int</span> k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	arr res;</span><br><span class="line">	res.init();</span><br><span class="line">	<span class="keyword">while</span>(k)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(k&amp;<span class="number">1</span>)res=res*a;</span><br><span class="line">		a=a*a;</span><br><span class="line">		k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> m,k;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;n,&amp;m,&amp;k);</span><br><span class="line">	<span class="keyword">int</span> x=k%m;</span><br><span class="line">	arr a,b;</span><br><span class="line">	a.init(),b.init();</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		arr tp;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;tp.a[j]);</span><br><span class="line">		a=a*tp;</span><br><span class="line">		<span class="keyword">if</span>(i==x)</span><br><span class="line">			b=a;</span><br><span class="line">	&#125;</span><br><span class="line">	a=qmod(a,k/m);</span><br><span class="line">	a=a*b;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d "</span>,a.a[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="https://vijos.org/p/1049">https://vijos.org/p/1049</a><br>题目大意：顺次给出m个置换，反复使用这m个置换对初始序列进行操作，问k次置换后的序列。m&lt;=10, k<2^31。]]>
    
    </summary>
    
      <category term="matrix" scheme="http://tak3ncpp.github.io/tags/matrix/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[hdu 3306]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/02/matrix3.2/"/>
    <id>http://tak3ncpp.github.io/2015/10/02/matrix3.2/</id>
    <published>2015-10-01T23:33:36.000Z</published>
    <updated>2015-10-02T03:43:27.622Z</updated>
    <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=3306" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=3306</a><br>题目大意：A(0) = 1 , A(1) = 1 , A(N) = X <em> A(N - 1) + Y </em> A(N - 2) (N &gt;= 2)；给定三个值N，X，Y求S(N):S(N) = A(0)2 +A(1)2+……+A(n)2。 <a id="more"></a>   </p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> N <span class="number">4</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> Mytype int</span></span><br><span class="line">Mytype mod;</span><br><span class="line"><span class="keyword">struct</span> matrix </span><br><span class="line">&#123;</span><br><span class="line">	Mytype a[N][N];</span><br><span class="line">	matrix <span class="keyword">operator</span>*(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		mem(res.a,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				<span class="keyword">if</span>(a[i][j])</span><br><span class="line">					<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;N;k++)</span><br><span class="line">						res.a[i][k]+=a[i][j]*y.a[j][k],res.a[i][k]%=mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">	matrix <span class="keyword">operator</span>+(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">				res.a[i][j]=a[i][j]+y.a[i][j],res.a[i][j]%=mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">matrix <span class="title">qmod</span><span class="params">(matrix a,<span class="keyword">long</span> <span class="keyword">long</span> k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	matrix res;</span><br><span class="line">	mem(res.a,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">		res.a[i][i]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(k)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(k&amp;<span class="number">1</span>)</span><br><span class="line">			res=res*a;</span><br><span class="line">		a=a*a;</span><br><span class="line">		k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	mod=<span class="number">10007</span>;</span><br><span class="line">	<span class="keyword">long</span> <span class="keyword">long</span> m,x,y;</span><br><span class="line">	<span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%I64d%I64d%I64d"</span>,&amp;m,&amp;x,&amp;y))</span><br><span class="line">	&#123;</span><br><span class="line">		matrix a;</span><br><span class="line">		mem(a.a,<span class="number">0</span>);</span><br><span class="line">		x%=mod;</span><br><span class="line">		y%=mod;</span><br><span class="line">		a.a[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>,a.a[<span class="number">0</span>][<span class="number">1</span>]=<span class="number">1</span>,a.a[<span class="number">1</span>][<span class="number">1</span>]=x*x%mod;</span><br><span class="line">		a.a[<span class="number">1</span>][<span class="number">2</span>]=y*y%mod;</span><br><span class="line">		a.a[<span class="number">1</span>][<span class="number">3</span>]=<span class="number">2</span>*x*y%mod,a.a[<span class="number">2</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">		a.a[<span class="number">3</span>][<span class="number">1</span>]=x,a.a[<span class="number">3</span>][<span class="number">3</span>]=y;</span><br><span class="line">		a=qmod(a,m);</span><br><span class="line">		<span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">			ans+=a.a[<span class="number">0</span>][i];</span><br><span class="line">		ans%=mod;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=3306">http://acm.hdu.edu.cn/showproblem.php?pid=3306</a><br>题目大意：A(0) = 1 , A(1) = 1 , A(N) = X <em> A(N - 1) + Y </em> A(N - 2) (N &gt;= 2)；给定三个值N，X，Y求S(N):S(N) = A(0)2 +A(1)2+……+A(n)2。]]>
    
    </summary>
    
      <category term="matrix" scheme="http://tak3ncpp.github.io/tags/matrix/"/>
    
      <category term="二分" scheme="http://tak3ncpp.github.io/tags/%E4%BA%8C%E5%88%86/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[hdu 1588]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/02/matrix3.1/"/>
    <id>http://tak3ncpp.github.io/2015/10/02/matrix3.1/</id>
    <published>2015-10-01T23:33:35.000Z</published>
    <updated>2015-10-02T03:45:14.881Z</updated>
    <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1588" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=1588</a><br>题目大意：求下标为g(x)=k<em>i+b,(i=0,1,…,n-1)的Fibonacci数列F( g(i) )的和mod m，即求Fib(k</em>0+b)+Fib(k<em>1+b)+Fib(k</em>2+b)+……+Fib(k*(n-1)+b)  mod  m <a id="more"></a><br>整理公式后，和poj 3233相似。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> siz <span class="number">2</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> Mytype long long</span></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">Mytype mod;</span><br><span class="line"><span class="keyword">struct</span> matrix </span><br><span class="line">&#123;</span><br><span class="line">	Mytype a[siz][siz];</span><br><span class="line">	matrix <span class="keyword">operator</span>*(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		mem(res.a,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">				<span class="keyword">if</span>(a[i][j])</span><br><span class="line">					<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;n;k++)</span><br><span class="line">						res.a[i][k]+=a[i][j]*y.a[j][k],res.a[i][k]%=mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">	matrix <span class="keyword">operator</span>+(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">				res.a[i][j]=a[i][j]+y.a[i][j],res.a[i][j]%=mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">matrix <span class="title">qmod</span><span class="params">(matrix a,<span class="keyword">int</span> k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	matrix res;</span><br><span class="line">	mem(res.a,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">		res.a[i][i]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(k)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(k&amp;<span class="number">1</span>)</span><br><span class="line">			res=res*a;</span><br><span class="line">		a=a*a;</span><br><span class="line">		k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">matrix <span class="title">bin</span><span class="params">(<span class="keyword">const</span> matrix &amp;a,<span class="keyword">int</span> k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(k==<span class="number">1</span>)</span><br><span class="line">		<span class="keyword">return</span> a;</span><br><span class="line">	<span class="keyword">if</span>(k&amp;<span class="number">1</span>)</span><br><span class="line">		<span class="keyword">return</span> qmod(a,k)+bin(a,k-<span class="number">1</span>);</span><br><span class="line">	<span class="keyword">int</span> half=k/<span class="number">2</span>;</span><br><span class="line">	matrix A=bin(a,half);</span><br><span class="line">	matrix B=qmod(a,half);</span><br><span class="line">	<span class="keyword">return</span> A+A*B;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> b,base,m;</span><br><span class="line">	n=<span class="number">2</span>;</span><br><span class="line">	<span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d%d%I64d"</span>,&amp;base,&amp;b,&amp;m,&amp;mod))</span><br><span class="line">	&#123;</span><br><span class="line">		matrix a;</span><br><span class="line">		a.a[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>,a.a[<span class="number">0</span>][<span class="number">1</span>]=<span class="number">1</span>,a.a[<span class="number">1</span>][<span class="number">0</span>]=<span class="number">1</span>,a.a[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">		matrix x1=qmod(a,b);</span><br><span class="line">		a=qmod(a,base);</span><br><span class="line">		matrix x2=bin(a,m-<span class="number">1</span>);</span><br><span class="line">		x1=x1+x1*x2;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%I64d\n"</span>,x1.a[<span class="number">1</span>][<span class="number">0</span>]);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1588">http://acm.hdu.edu.cn/showproblem.php?pid=1588</a><br>题目大意：求下标为g(x)=k<em>i+b,(i=0,1,…,n-1)的Fibonacci数列F( g(i) )的和mod m，即求Fib(k</em>0+b)+Fib(k<em>1+b)+Fib(k</em>2+b)+……+Fib(k*(n-1)+b)  mod  m]]>
    
    </summary>
    
      <category term="matrix" scheme="http://tak3ncpp.github.io/tags/matrix/"/>
    
      <category term="二分" scheme="http://tak3ncpp.github.io/tags/%E4%BA%8C%E5%88%86/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[poj 3233]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/02/matrix3/"/>
    <id>http://tak3ncpp.github.io/2015/10/02/matrix3/</id>
    <published>2015-10-01T23:33:34.000Z</published>
    <updated>2015-10-02T03:35:47.582Z</updated>
    <content type="html"><![CDATA[<p> <a href="http://poj.org/problem?id=3233" target="_blank" rel="external">http://poj.org/problem?id=3233</a><br>题目大意：给定矩阵A，求A + A^2 + A^3 + … + A^k的结果（两个矩阵相加就是对应位置分别相加）。输出的数据mod m。k&lt;=10^9。  <a id="more"></a><br>    这道题两次二分，相当经典。首先我们知道，A^i可以二分求出。然后我们需要对整个题目的数据规模k进行二分。比如，当k=6时，有：<br>    A + A^2 + A^3 + A^4 + A^5 + A^6 =(A + A^2 + A^3) + A^3*(A + A^2 + A^3)<br>    应用这个式子后，规模k减小了一半。我们二分求出A^3后再递归地计算A + A^2 + A^3，即可得到原问题的答案。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> siz <span class="number">31</span></span></span><br><span class="line"><span class="keyword">int</span> n,k,mod;</span><br><span class="line"><span class="keyword">struct</span> matrix </span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> a[siz][siz];</span><br><span class="line">	matrix <span class="keyword">operator</span>*(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		mem(res.a,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">				<span class="keyword">if</span>(a[i][j])</span><br><span class="line">					<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;n;k++)</span><br><span class="line">						res.a[i][k]+=a[i][j]*y.a[j][k],res.a[i][k]%=mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">	matrix <span class="keyword">operator</span>+(<span class="keyword">const</span> matrix &amp;y)<span class="keyword">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		matrix res;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">				res.a[i][j]=a[i][j]+y.a[i][j],res.a[i][j]%=mod;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">matrix <span class="title">qmod</span><span class="params">(matrix a,<span class="keyword">int</span> k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	matrix res;</span><br><span class="line">	mem(res.a,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">		res.a[i][i]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(k)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(k&amp;<span class="number">1</span>)</span><br><span class="line">			res=res*a;</span><br><span class="line">		a=a*a;</span><br><span class="line">		k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">matrix <span class="title">bin</span><span class="params">(<span class="keyword">const</span> matrix &amp;a,<span class="keyword">int</span> k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(k==<span class="number">1</span>)</span><br><span class="line">		<span class="keyword">return</span> a;</span><br><span class="line">	<span class="keyword">if</span>(k&amp;<span class="number">1</span>)</span><br><span class="line">		<span class="keyword">return</span> qmod(a,k)+bin(a,k-<span class="number">1</span>);</span><br><span class="line">	<span class="keyword">int</span> half=k/<span class="number">2</span>;</span><br><span class="line">	matrix A=bin(a,half);</span><br><span class="line">	matrix B=qmod(a,half);</span><br><span class="line">	<span class="keyword">return</span> A+A*B;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;n,&amp;k,&amp;mod);</span><br><span class="line">	matrix a;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a.a[i][j]);</span><br><span class="line">	a=bin(a,k);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%d%c"</span>,a.a[i][j],<span class="string">" \n"</span>[j==n-<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><a href="http://tak3ncpp.github.io/2015/10/02/matrix3.1/">相关练习1</a></li>
<li><a href="http://tak3ncpp.github.io/2015/10/02/matrix3.2/">相关练习2</a></li>
</ul>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p> <a href="http://poj.org/problem?id=3233">http://poj.org/problem?id=3233</a><br>题目大意：给定矩阵A，求A + A^2 + A^3 + … + A^k的结果（两个矩阵相加就是对应位置分别相加）。输出的数据mod m。k&lt;=10^9。]]>
    
    </summary>
    
      <category term="matrix" scheme="http://tak3ncpp.github.io/tags/matrix/"/>
    
      <category term="二分" scheme="http://tak3ncpp.github.io/tags/%E4%BA%8C%E5%88%86/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[hdu 1575]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/02/matrix2/"/>
    <id>http://tak3ncpp.github.io/2015/10/02/matrix2/</id>
    <published>2015-10-01T23:31:34.000Z</published>
    <updated>2015-10-02T03:28:26.321Z</updated>
    <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1575" target="_blank" rel="external">http://acm.hdu.edu.cn/showproblem.php?pid=1575</a><br>给定矩阵A，请快速计算出A^n（n个A相乘）的结果，输出的每个数都mod p。<a id="more"></a><br>由于矩阵乘法具有结合律，因此A^4 = A <em> A </em> A <em> A = (A</em>A) <em> (A</em>A) = A^2 <em> A^2。我们可以得到这样的结论：当n为偶数时，A^n = A^(n/2) </em> A^(n/2)；当n为奇数时，A^n = A^(n/2) <em> A^(n/2) </em> A （其中n/2取整）。这就告诉我们，计算A^n也可以使用二分快速求幂的方法。例如，为了算出A^25的值，我们只需要递归地计算出A^12、A^6、A^3的值即可。根据这里的一些结果，我们可以在计算过程中不断取模，避免高精度运算。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> siz <span class="number">10</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mod <span class="number">9973</span></span></span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="keyword">struct</span> matrix </span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> a[siz][siz];</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">matrix <span class="title">multi</span><span class="params">(matrix &amp;x,matrix &amp;y)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	matrix res;</span><br><span class="line">	mem(res.a,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">			<span class="keyword">if</span>(x.a[i][j])</span><br><span class="line">				<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;n;k++)</span><br><span class="line">					res.a[i][k]+=x.a[i][j]*y.a[j][k],res.a[i][k]%=mod;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">matrix <span class="title">qmod</span><span class="params">(matrix a,<span class="keyword">int</span> k)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	matrix res;</span><br><span class="line">	mem(res.a,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">		res.a[i][i]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(k)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(k&amp;<span class="number">1</span>)</span><br><span class="line">			res=multi(res,a);</span><br><span class="line">		a=multi(a,a);</span><br><span class="line">		k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">	<span class="keyword">while</span>(t--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;k);</span><br><span class="line">		matrix a;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">				<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a.a[i][j]);</span><br><span class="line">		a=qmod(a,k);</span><br><span class="line">		<span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">			ans+=a.a[i][i],ans%=mod;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1575">http://acm.hdu.edu.cn/showproblem.php?pid=1575</a><br>给定矩阵A，请快速计算出A^n（n个A相乘）的结果，输出的每个数都mod p。]]>
    
    </summary>
    
      <category term="matrix" scheme="http://tak3ncpp.github.io/tags/matrix/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[nyoj 298]]></title>
    <link href="http://tak3ncpp.github.io/2015/10/02/matrix1/"/>
    <id>http://tak3ncpp.github.io/2015/10/02/matrix1/</id>
    <published>2015-10-01T23:30:34.000Z</published>
    <updated>2015-10-02T03:25:06.629Z</updated>
    <content type="html"><![CDATA[<p><a href="http://acm.nyist.net/JudgeOnline/problem.php?pid=298" target="_blank" rel="external">http://acm.nyist.net/JudgeOnline/problem.php?pid=298</a><br>给定n个点，m个操作，构造O(m+n)的算法输出m个操作后各点的位置。操作有平移、缩放、翻转和旋转。<a id="more"></a><br>这里的操作是对所有点同时进行的。其中翻转是以坐标轴为对称轴进行翻转（两种情况），旋转则以原点为中心。如果对每个点分别进行模拟，那么m个操作总共耗 时O(mn)。利用矩阵乘法可以在O(m)的时间里把所有操作合并为一个矩阵，然后每个点与该矩阵相乘即可直接得出最终该点的位置，总共耗时 O(m+n)。假设初始时某个点的坐标为x和y，下面5个矩阵可以分别对其进行平移、旋转、翻转和旋转操作。预先把所有m个操作所对应的矩阵全部乘起来， 再乘以(x,y,1)，即可一步得出最终点的位置。<br><img src="/img/matrix1.png" alt=""></p>
<p>绕原点旋转的公式可由两点的叉积和点积方程联立求解。<br>虽然样例没跑过（0.0输出-0.0），还是抱着必A的决心交了，AC了。。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> siz <span class="number">3</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> MAXN <span class="number">10000</span>+<span class="number">5</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> pi acos(-<span class="number">1</span>)</span></span><br><span class="line"><span class="keyword">struct</span> matrix </span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">double</span> a[siz][siz];</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">matrix <span class="title">multi</span><span class="params">(matrix &amp;x,matrix &amp;y)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	matrix res;</span><br><span class="line">	mem(res.a,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;siz;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;siz;j++)</span><br><span class="line">			<span class="keyword">if</span>(x.a[i][j])</span><br><span class="line">				<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;siz;k++)</span><br><span class="line">					res.a[i][k]+=x.a[i][j]*y.a[j][k];</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">double</span> x[MAXN],y[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;x[i],&amp;y[i]);</span><br><span class="line">	matrix ans;</span><br><span class="line">	mem(ans.a,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;siz;i++)</span><br><span class="line">		ans.a[i][i]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(m--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">char</span> s[<span class="number">5</span>];</span><br><span class="line">		<span class="keyword">double</span> a,b;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">		matrix k;</span><br><span class="line">		mem(k.a,<span class="number">0</span>);	</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)</span><br><span class="line">			k.a[i][i]=<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">switch</span>(s[<span class="number">0</span>])</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">case</span> <span class="string">'M'</span>:</span><br><span class="line">				<span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;a,&amp;b);</span><br><span class="line">				k.a[<span class="number">0</span>][<span class="number">2</span>]=a;</span><br><span class="line">				k.a[<span class="number">1</span>][<span class="number">2</span>]=b;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="string">'X'</span>:</span><br><span class="line">				k.a[<span class="number">1</span>][<span class="number">1</span>]=-<span class="number">1</span>;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="string">'Y'</span>:</span><br><span class="line">				k.a[<span class="number">0</span>][<span class="number">0</span>]=-<span class="number">1</span>;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="string">'S'</span>:</span><br><span class="line">				<span class="built_in">scanf</span>(<span class="string">"%lf"</span>,&amp;a);</span><br><span class="line">				k.a[<span class="number">0</span>][<span class="number">0</span>]=k.a[<span class="number">1</span>][<span class="number">1</span>]=a;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="string">'R'</span>:</span><br><span class="line">				<span class="built_in">scanf</span>(<span class="string">"%lf"</span>,&amp;a);</span><br><span class="line">				a*=pi/<span class="number">180.0</span>;</span><br><span class="line">				k.a[<span class="number">0</span>][<span class="number">0</span>]=<span class="built_in">cos</span>(a);</span><br><span class="line">				k.a[<span class="number">0</span>][<span class="number">1</span>]=-<span class="built_in">sin</span>(a);</span><br><span class="line">				k.a[<span class="number">1</span>][<span class="number">0</span>]=<span class="built_in">sin</span>(a);</span><br><span class="line">				k.a[<span class="number">1</span>][<span class="number">1</span>]=<span class="built_in">cos</span>(a);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">default</span>:</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		ans=multi(k,ans);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">double</span> x1=x[i]*ans.a[<span class="number">0</span>][<span class="number">0</span>]+y[i]*ans.a[<span class="number">0</span>][<span class="number">1</span>]+ans.a[<span class="number">0</span>][<span class="number">2</span>];</span><br><span class="line">		<span class="keyword">double</span> y1=x[i]*ans.a[<span class="number">1</span>][<span class="number">0</span>]+y[i]*ans.a[<span class="number">1</span>][<span class="number">1</span>]+ans.a[<span class="number">1</span>][<span class="number">2</span>];</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%.1lf %.1lf\n"</span>,x1,y1);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://acm.nyist.net/JudgeOnline/problem.php?pid=298">http://acm.nyist.net/JudgeOnline/problem.php?pid=298</a><br>给定n个点，m个操作，构造O(m+n)的算法输出m个操作后各点的位置。操作有平移、缩放、翻转和旋转。]]>
    
    </summary>
    
      <category term="matrix" scheme="http://tak3ncpp.github.io/tags/matrix/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[uva 712]]></title>
    <link href="http://tak3ncpp.github.io/2015/08/29/uva%20712/"/>
    <id>http://tak3ncpp.github.io/2015/08/29/uva 712/</id>
    <published>2015-08-29T07:30:34.000Z</published>
    <updated>2015-08-31T09:01:32.343Z</updated>
    <content type="html"><![CDATA[<p>《算法入门》P176 <a id="more"></a><br>很机智的题，先处理顺序，再把询问换成二进制k，直接输出下标为k的数。<br>又因为PE WA了，服。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;numeric&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">pragma</span> comment(linker, <span class="string">"/STACK:10240000000,10240000000"</span>)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mec(x,y) memcpy(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> debug puts(<span class="string">"============"</span>)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> eps <span class="number">1e-5</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mp(x,y) make_pair(x,y)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> NV <span class="number">150</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> nit int</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mian main</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> ture true</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">100</span>+<span class="number">4</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> sf(x) scanf(<span class="string">"%d"</span>,&amp;x)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> sff(x,y) scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> sfff(x,y,z) scanf(<span class="string">"%d%d%d"</span>,&amp;x,&amp;y,&amp;z)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> NE <span class="number">3000</span></span></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> tree[<span class="number">3000</span>];</span><br><span class="line"><span class="keyword">int</span> order[<span class="number">3000</span>],a[<span class="number">3000</span>];</span><br><span class="line"><span class="keyword">int</span> q[<span class="number">3000</span>],r[<span class="number">3000</span>];</span><br><span class="line"><span class="keyword">int</span> res[<span class="number">3000</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cas=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(sf(n),n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> s[<span class="number">500</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">            order[i]=atol(s+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;n);i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%1d"</span>,&amp;a[i]);</span><br><span class="line">        <span class="keyword">int</span> m;</span><br><span class="line">        sf(m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;m;k++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%1d"</span>,&amp;q[i]);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">                r[i]=q[order[i]];</span><br><span class="line">            <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                ans+=r[i];</span><br><span class="line">                ans*=<span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            ans/=<span class="number">2</span>;</span><br><span class="line">            res[k]=a[ans];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"S-Tree #%d:\n"</span>,++cas);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)<span class="built_in">printf</span>(<span class="string">"%d"</span>,res[i]);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>《算法入门》P176]]>
    
    </summary>
    
      <category term="数据结构" scheme="http://tak3ncpp.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[uva 439]]></title>
    <link href="http://tak3ncpp.github.io/2015/08/29/uva%20439/"/>
    <id>http://tak3ncpp.github.io/2015/08/29/uva 439/</id>
    <published>2015-08-29T03:30:34.000Z</published>
    <updated>2015-08-31T08:16:10.686Z</updated>
    <content type="html"><![CDATA[<p>《算法入门》P177  <a id="more"></a><br>和poj 2243一毛一样。然而。。。这个的时限是3000ms那个是1000ms，而且，当年Floyd的代码0ms过。这意味着什么？这意味着数据太弱，暴力乱过呀！我当年TLE的代码们终于以13ms的成绩从见天日了。 </p>
<p>方法一，赤裸裸的广搜：  </p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;numeric&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">pragma</span> comment(linker, <span class="string">"/STACK:10240000000,10240000000"</span>)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3ffffff</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mx <span class="number">1000004</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mec(x,y) memcpy(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> eps <span class="number">1e-5</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mod <span class="number">1000000007</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mp(x,y) make_pair(x,y)</span></span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> step[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cango</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x&gt;=<span class="number">1</span>&amp;&amp;x&lt;=<span class="number">8</span>&amp;&amp;y&gt;=<span class="number">1</span>&amp;&amp;y&lt;=<span class="number">8</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> X[]=&#123;-<span class="number">1</span>,-<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>,-<span class="number">1</span>,-<span class="number">2</span>&#125;,Y[]=&#123;-<span class="number">2</span>,-<span class="number">1</span>,-<span class="number">2</span>,-<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> s1[<span class="number">5</span>],s2[<span class="number">5</span>];</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%s%s"</span>,s1,s2))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"To get from %s to %s takes "</span>,s1,s2);</span><br><span class="line">        <span class="keyword">int</span> x1=s1[<span class="number">0</span>]-<span class="string">'a'</span>+<span class="number">1</span>,x2=s2[<span class="number">0</span>]-<span class="string">'a'</span>+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> y1=s1[<span class="number">1</span>]-<span class="string">'0'</span>,y2=s2[<span class="number">1</span>]-<span class="string">'0'</span>;</span><br><span class="line">        <span class="built_in">queue</span>&lt;pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt;q;</span><br><span class="line">        q.push(mp(x1,y1));</span><br><span class="line">        mem(vis,<span class="number">0</span>);</span><br><span class="line">        mem(step,<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">while</span>(!q.empty())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> x=q.front().first;</span><br><span class="line">            <span class="keyword">int</span> y=q.front().second;</span><br><span class="line">            q.pop();</span><br><span class="line">            vis[x][y]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(x==x2&amp;&amp;y==y2)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d knight moves.\n"</span>,step[x][y]);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">                <span class="keyword">if</span>(cango(x+X[i],y+Y[i])&amp;&amp;!vis[x+X[i]][y+Y[i]])</span><br><span class="line">                &#123;</span><br><span class="line">                    q.push(mp(x+X[i],y+Y[i]));</span><br><span class="line">                    step[x+X[i]][y+Y[i]]=step[x][y]+<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>方法二，避免重复的广搜：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mem(x,y) memset(x,y,sizeof(x))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">50008</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxe <span class="number">400008</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x3f3f3f3f</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mp(x,y) make_pair(x,y)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> step[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cango</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x&gt;=<span class="number">1</span>&amp;&amp;x&lt;=<span class="number">8</span>&amp;&amp;y&gt;=<span class="number">1</span>&amp;&amp;y&lt;=<span class="number">8</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> X[]=&#123;-<span class="number">1</span>,-<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>,-<span class="number">1</span>,-<span class="number">2</span>&#125;,Y[]=&#123;-<span class="number">2</span>,-<span class="number">1</span>,-<span class="number">2</span>,-<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>][<span class="number">10</span>][<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> x1=<span class="number">1</span>;x1&lt;<span class="number">9</span>;x1++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> x2=<span class="number">1</span>;x2&lt;<span class="number">9</span>;x2++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> y1=<span class="number">1</span>;y1&lt;<span class="number">9</span>;y1++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> y2=<span class="number">1</span>;y2&lt;<span class="number">9</span>;y2++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">queue</span>&lt;pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt;q;</span><br><span class="line">        q.push(mp(x1,y1));</span><br><span class="line">        mem(vis,<span class="number">0</span>);</span><br><span class="line">        mem(step,<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">while</span>(!q.empty())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> x=q.front().first;</span><br><span class="line">            <span class="keyword">int</span> y=q.front().second;</span><br><span class="line">            q.pop();</span><br><span class="line">            vis[x][y]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(x==x2&amp;&amp;y==y2)</span><br><span class="line">            &#123;</span><br><span class="line">                a[x1][y1][x2][y2]=step[x][y];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">                <span class="keyword">if</span>(cango(x+X[i],y+Y[i])&amp;&amp;!vis[x+X[i]][y+Y[i]])</span><br><span class="line">                &#123;</span><br><span class="line">                    q.push(mp(x+X[i],y+Y[i]));</span><br><span class="line">                    step[x+X[i]][y+Y[i]]=step[x][y]+<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">     <span class="keyword">char</span> s1[<span class="number">5</span>],s2[<span class="number">5</span>];</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%s%s"</span>,s1,s2))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"To get from %s to %s takes "</span>,s1,s2);</span><br><span class="line">        <span class="keyword">int</span> x1=s1[<span class="number">0</span>]-<span class="string">'a'</span>+<span class="number">1</span>,x2=s2[<span class="number">0</span>]-<span class="string">'a'</span>+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> y1=s1[<span class="number">1</span>]-<span class="string">'0'</span>,y2=s2[<span class="number">1</span>]-<span class="string">'0'</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d knight moves.\n"</span>,a[x1][y1][x2][y2]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em>EOF</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>《算法入门》P177]]>
    
    </summary>
    
      <category term="bfs" scheme="http://tak3ncpp.github.io/tags/bfs/"/>
    
      <category term="ACM" scheme="http://tak3ncpp.github.io/categories/ACM/"/>
    
  </entry>
  
</feed>
